{
	"info": {
		"_postman_id": "78965e97-8eae-4890-b2e3-586d22f2a8e7",
		"name": "Magento",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Mine / Me",
			"item": [
				{
					"name": "integration/customer/token - Create access token for admin given the customer credentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"{{username}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/integration/customer/token",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"integration",
								"customer",
								"token"
							]
						},
						"description": "Create access token for admin given the customer credentials."
					},
					"response": []
				},
				{
					"name": "carts/mine - Returns information for the cart for a specified customer",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine"
							]
						},
						"description": "Returns information for the cart for a specified customer."
					},
					"response": []
				},
				{
					"name": "carts/mine - Save quote",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine"
							]
						},
						"description": "Save quote"
					},
					"response": []
				},
				{
					"name": "carts/mine - Creates an empty cart and quote for a specified customer if customer does not have a cart yet",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine"
							]
						},
						"description": "Creates an empty cart and quote for a specified customer if customer does not have a cart yet."
					},
					"response": []
				},
				{
					"name": "carts/mine/order - Places an order for a specified cart",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/order",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"order"
							]
						},
						"description": "Places an order for a specified cart."
					},
					"response": []
				},
				{
					"name": "carts/mine/shipping-methods - Lists applicable shipping methods for a specified quote",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/shipping-methods",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"shipping-methods"
							]
						},
						"description": "Lists applicable shipping methods for a specified quote."
					},
					"response": []
				},
				{
					"name": "carts/mine/estimate-shipping-methods-by-address-id - Estimate shipping",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/estimate-shipping-methods-by-address-id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"estimate-shipping-methods-by-address-id"
							]
						},
						"description": "Estimate shipping"
					},
					"response": []
				},
				{
					"name": "carts/mine/shipping-information - Add/update shiping information",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/shipping-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"shipping-information"
							]
						}
					},
					"response": []
				},
				{
					"name": "carts/mine/totals-information - Calculate quote totals based on address and shipping method",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/totals-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"totals-information"
							]
						},
						"description": "Calculate quote totals based on address and shipping method."
					},
					"response": []
				},
				{
					"name": "carts/mine/payment-information - Get payment information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/payment-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"payment-information"
							]
						},
						"description": "Get payment information"
					},
					"response": []
				},
				{
					"name": "carts/mine/payment-information - Set payment information and place order for a specified cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/payment-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"payment-information"
							]
						},
						"description": "Set payment information and place order for a specified cart."
					},
					"response": []
				},
				{
					"name": "carts/mine/set-payment-information - Set payment information for a specified cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/set-payment-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"set-payment-information"
							]
						},
						"description": "Set payment information for a specified cart."
					},
					"response": []
				},
				{
					"name": "carts/mine/balance/apply - Apply store credit",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/balance/apply",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"balance",
								"apply"
							]
						},
						"description": "Apply store credit"
					},
					"response": []
				},
				{
					"name": "carts/mine/giftCards/:giftCardCode - Remove GiftCard Account entity",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/giftCards/:giftCardCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"giftCards",
								":giftCardCode"
							],
							"variable": [
								{
									"key": "giftCardCode",
									"value": "{{giftCardCode}}"
								}
							]
						},
						"description": "Remove GiftCard Account entity"
					},
					"response": []
				},
				{
					"name": "carts/mine/giftCards - Add GiftCard Account entity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/giftCards",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"giftCards"
							]
						}
					},
					"response": []
				},
				{
					"name": "carts/mine/checkGiftCard/:giftCardCode - Gets GiftCards for an Account entity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/checkGiftCard/:giftCardCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"checkGiftCard",
								":giftCardCode"
							],
							"variable": [
								{
									"key": "giftCardCode",
									"value": "{{giftCardCode}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "carts/guest-carts/:cartId/giftCards/:giftCardCode - Remove GiftCard Account entity",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/guest-carts/:cartId/giftCards/:giftCardCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"guest-carts",
								":cartId",
								"giftCards",
								":giftCardCode"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								},
								{
									"key": "giftCardCode",
									"value": "{{giftCardCode}}"
								}
							]
						},
						"description": "Remove GiftCard Account entity"
					},
					"response": []
				},
				{
					"name": "carts/guest-carts/:cartId/giftCards - Updates gift cards for a guest cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/guest-carts/:cartId/giftCards",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"guest-carts",
								":cartId",
								"giftCards"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "carts/guest-carts/:cartId/checkGiftCard/:giftCardCode - Returns gift cards for a guest cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/guest-carts/:cartId/checkGiftCard/:giftCardCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"guest-carts",
								":cartId",
								"checkGiftCard",
								":giftCardCode"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								},
								{
									"key": "giftCardCode",
									"value": "{{giftCardCode}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "giftregistry/mine/estimate-shipping-methods - Estimate shipping",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/giftregistry/mine/estimate-shipping-methods",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"giftregistry",
								"mine",
								"estimate-shipping-methods"
							]
						},
						"description": "Estimate shipping"
					},
					"response": []
				},
				{
					"name": "carts/mine/gift-message - Return the gift message for a specified order",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/gift-message",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"gift-message"
							]
						},
						"description": "Return the gift message for a specified order."
					},
					"response": []
				},
				{
					"name": "carts/mine/gift-message - Set the gift message for an entire order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/gift-message",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"gift-message"
							]
						},
						"description": "Set the gift message for an entire order."
					},
					"response": []
				},
				{
					"name": "carts/mine/gift-message/:itemId - Return the gift message for a specified item in a specified shopping cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/gift-message/:itemId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"gift-message",
								":itemId"
							],
							"variable": [
								{
									"key": "itemId",
									"value": "{{itemId}}"
								}
							]
						},
						"description": "Return the gift message for a specified item in a specified shopping cart."
					},
					"response": []
				},
				{
					"name": "carts/mine/items - Lists items that are assigned to a specified cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/items",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"items"
							]
						},
						"description": "Lists items that are assigned to a specified cart."
					},
					"response": []
				},
				{
					"name": "carts/mine/items - Add/update the specified cart item",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/items",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"items"
							]
						},
						"description": "Add/update the specified cart item."
					},
					"response": []
				},
				{
					"name": "carts/mine/items/:itemId - Add/update the specified cart item",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/items/:itemId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"items",
								":itemId"
							],
							"variable": [
								{
									"key": "itemId",
									"value": "{{itemId}}"
								}
							]
						},
						"description": "Add/update the specified cart item."
					},
					"response": []
				},
				{
					"name": "carts/mine/items/:itemId - Removes the specified item from the specified cart",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/items/:itemId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"items",
								":itemId"
							],
							"variable": [
								{
									"key": "itemId",
									"value": "{{itemId}}"
								}
							]
						},
						"description": "Removes the specified item from the specified cart."
					},
					"response": []
				},
				{
					"name": "carts/mine/selected-payment-method - Returns the payment method for a specified shopping cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/selected-payment-method",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"selected-payment-method"
							]
						},
						"description": "Returns the payment method for a specified shopping cart."
					},
					"response": []
				},
				{
					"name": "carts/mine/selected-payment-method - Adds a specified payment method to a specified shopping cart",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/selected-payment-method",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"selected-payment-method"
							]
						},
						"description": "Adds a specified payment method to a specified shopping cart."
					},
					"response": []
				},
				{
					"name": "carts/mine/payment-methods - Returns payment methods for an Account Entity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/payment-methods",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"payment-methods"
							]
						},
						"description": "Lists available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See http://devdocs.magento.com/codelinks/attributes.html#PaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object."
					},
					"response": []
				},
				{
					"name": "carts/mine/billing-address - Returns the billing address for a specified quote",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/billing-address",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"billing-address"
							]
						},
						"description": "Returns the billing address for a specified quote."
					},
					"response": []
				},
				{
					"name": "carts/mine/billing-address - Assigns a specified billing address to a specified cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/billing-address",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"billing-address"
							]
						},
						"description": "Assigns a specified billing address to a specified cart."
					},
					"response": []
				},
				{
					"name": "carts/mine/coupons - Returns information for a coupon in a specified cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/coupons",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"coupons"
							]
						},
						"description": "Returns information for a coupon in a specified cart."
					},
					"response": []
				},
				{
					"name": "carts/mine/coupons - Deletes a coupon from a specified cart",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/coupons",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"coupons"
							]
						},
						"description": "Deletes a coupon from a specified cart."
					},
					"response": []
				},
				{
					"name": "carts/mine/coupons/:couponCode - Adds a coupon by code to a specified cart",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/coupons/:couponCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"coupons",
								":couponCode"
							],
							"variable": [
								{
									"key": "couponCode",
									"value": "{{couponCode}}"
								}
							]
						},
						"description": "Adds a coupon by code to a specified cart."
					},
					"response": []
				},
				{
					"name": "carts/mine/totals - Returns quote totals data for a specified cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/totals",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"totals"
							]
						},
						"description": "Returns quote totals data for a specified cart."
					},
					"response": []
				},
				{
					"name": "carts/mine/collect-totals - Set shipping/billing methods and additional data for cart and collect totals",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/collect-totals",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"collect-totals"
							]
						},
						"description": "Set shipping/billing methods and additional data for cart and collect totals."
					},
					"response": []
				},
				{
					"name": "carts/mine/gift-message/:itemId - Set the gift message for a specified item in a specified shopping cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/gift-message/:itemId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"gift-message",
								":itemId"
							],
							"variable": [
								{
									"key": "itemId",
									"value": "{{itemId}}"
								}
							]
						},
						"description": "Set the gift message for a specified item in a specified shopping cart."
					},
					"response": []
				},
				{
					"name": "reward/mine/use-reward - Set reward points to quote",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/reward/mine/use-reward",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"reward",
								"mine",
								"use-reward"
							]
						},
						"description": "Set reward points to quote"
					},
					"response": []
				},
				{
					"name": "carts/mine/estimate-shipping-methods - Estimate shipping by address and return list of available shipping methods",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/mine/estimate-shipping-methods",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"mine",
								"estimate-shipping-methods"
							]
						},
						"description": "Estimate shipping by address and return list of available shipping methods"
					},
					"response": []
				},
				{
					"name": "customers/me/password - Change customer password",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/me/password",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								"me",
								"password"
							]
						},
						"description": "Change customer password."
					},
					"response": []
				},
				{
					"name": "customers/me - Get customer by Customer ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/me",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								"me"
							]
						},
						"description": "Get customer by Customer ID."
					},
					"response": []
				},
				{
					"name": "customers/me/billingAddress - Retrieve default billing address for the given customerId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/me/billingAddress",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								"me",
								"billingAddress"
							]
						},
						"description": "Retrieve default billing address for the given customerId."
					},
					"response": []
				},
				{
					"name": "customers/me/shippingAddress - Retrieve default shipping address for the given customerId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/me/shippingAddress",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								"me",
								"shippingAddress"
							]
						},
						"description": "Retrieve default shipping address for the given customerId."
					},
					"response": []
				},
				{
					"name": "customers/me - Create or update a customer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/me",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								"me"
							]
						},
						"description": "Create or update a customer."
					},
					"response": []
				},
				{
					"name": "customers/me/activate - Activate a customer account using a key that was sent in a confirmation email",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/me/activate",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								"me",
								"activate"
							]
						},
						"description": "Activate a customer account using a key that was sent in a confirmation email."
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{userAccessToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c636ebc0-881b-4113-a951-a6d335fed83f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9ec1748c-b7a7-4e27-94ec-ed597c1cab94",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Guest",
			"item": [
				{
					"name": "guest-carts/:cartId - Enable a guest user to return information for a specified cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Enable a guest user to return information for a specified cart."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId - Assign a specified customer to a specified shopping cart",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Assign a specified customer to a specified shopping cart."
					},
					"response": []
				},
				{
					"name": "guest-carts - Enable an customer or guest user to create an empty cart and quote for an anonymous customer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts"
							]
						},
						"description": "Enable an customer or guest user to create an empty cart and quote for an anonymous customer."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/order - Place an order for a specified cart",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/order",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"order"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Place an order for a specified cart."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/gift-message - Return the gift message for a specified order",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/gift-message",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"gift-message"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Return the gift message for a specified order."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/gift-message - Set the gift message for an entire order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/gift-message",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"gift-message"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Set the gift message for an entire order."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/gift-message/:itemId - Return the gift message for a specified item in a specified shopping cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/gift-message/:itemId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"gift-message",
								":itemId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								},
								{
									"key": "itemId",
									"value": "{{itemId}}"
								}
							]
						},
						"description": "Return the gift message for a specified item in a specified shopping cart."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/gift-message/:itemId - Set the gift message for a specified item in a specified shopping cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/gift-message/:itemId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"gift-message",
								":itemId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								},
								{
									"key": "itemId",
									"value": "{{itemId}}"
								}
							]
						},
						"description": "Set the gift message for a specified item in a specified shopping cart."
					},
					"response": []
				},
				{
					"name": "carts - Creates an empty cart and quote for a guest",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								""
							]
						},
						"description": "Creates an empty cart and quote for a guest."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/shipping-methods - List applicable shipping methods for a specified quote",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/shipping-methods",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"shipping-methods"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "List applicable shipping methods for a specified quote."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/estimate-shipping-methods - Estimate shipping by address and return list of available shipping methods",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/estimate-shipping-methods",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"estimate-shipping-methods"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Estimate shipping by address and return list of available shipping methods"
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/items - List items that are assigned to a specified cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/items",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"items"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "List items that are assigned to a specified cart."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/items - Add/update the specified cart item",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/items",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"items"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Add/update the specified cart item."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/items/:itemId - Add/update the specified cart item",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/items/:itemId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"items",
								":itemId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								},
								{
									"key": "itemId",
									"value": "{{itemId}}"
								}
							]
						},
						"description": "Add/update the specified cart item."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/items/:itemId - Remove the specified item from the specified cart",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/items/:itemId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"items",
								":itemId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								},
								{
									"key": "itemId",
									"value": "{{itemId}}"
								}
							]
						},
						"description": "Remove the specified item from the specified cart."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/selected-payment-method - Return the payment method for a specified shopping cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/selected-payment-method",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"selected-payment-method"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Return the payment method for a specified shopping cart."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/selected-payment-method - Add a specified payment method to a specified shopping cart",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/selected-payment-method",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"selected-payment-method"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Add a specified payment method to a specified shopping cart."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/payment-methods - Returns payment methods for a specified shopping cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/payment-methods",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"payment-methods"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "List available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See http://devdocs.magento.com/codelinks/attributes.html#GuestPaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/billing-address - Return the billing address for a specified quote",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/billing-address",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"billing-address"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Return the billing address for a specified quote."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/billing-address - Assign a specified billing address to a specified cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/billing-address",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"billing-address"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Assign a specified billing address to a specified cart."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/coupons - Return information for a coupon in a specified cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/coupons",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"coupons"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Return information for a coupon in a specified cart."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/coupons - Delete a coupon from a specified cart",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/coupons",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"coupons"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Delete a coupon from a specified cart."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/coupons/:couponCode - Add a coupon by code to a specified cart",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/coupons/:couponCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"coupons",
								":couponCode"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								},
								{
									"key": "couponCode",
									"value": "{{couponCode}}"
								}
							]
						},
						"description": "Add a coupon by code to a specified cart."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/collect-totals - Set shipping/billing methods and additional data for cart and collect totals for guest",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/collect-totals",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"collect-totals"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Set shipping/billing methods and additional data for cart and collect totals for guest."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/totals - Return quote totals data for a specified cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/totals",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"totals"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Return quote totals data for a specified cart."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/shipping-information - Updates shipping information for a specified cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/shipping-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"shipping-information"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/totals-information - Calculate quote totals based on address and shipping method",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/totals-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"totals-information"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Calculate quote totals based on address and shipping method."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/payment-information - Get payment information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/payment-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"payment-information"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Get payment information"
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/payment-information - Set payment information and place order for a specified cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/payment-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"payment-information"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Set payment information and place order for a specified cart."
					},
					"response": []
				},
				{
					"name": "guest-carts/:cartId/set-payment-information - Set payment information for a specified cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-carts/:cartId/set-payment-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-carts",
								":cartId",
								"set-payment-information"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Set payment information for a specified cart."
					},
					"response": []
				},
				{
					"name": "guest-giftregistry/:cartId/estimate-shipping-methods - Estimate shipping",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/guest-giftregistry/:cartId/estimate-shipping-methods",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"guest-giftregistry",
								":cartId",
								"estimate-shipping-methods"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Estimate shipping"
					},
					"response": []
				},
				{
					"name": "worldpay-guest-carts/:cartId/payment-information - Proxy handler for guest place order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/worldpay-guest-carts/:cartId/payment-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"worldpay-guest-carts",
								":cartId",
								"payment-information"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Proxy handler for guest place order"
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{userAccessToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a2601ac0-8940-49a5-9808-c955dc9116f0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "85bee4eb-97ba-4955-8f82-580beac70da1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "store/storeViews - Retrieve list of all stores",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/store/storeViews",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"store",
								"storeViews"
							]
						},
						"description": "Retrieve list of all stores"
					},
					"response": []
				},
				{
					"name": "store/storeGroups - Retrieve list of all groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/store/storeGroups",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"store",
								"storeGroups"
							]
						},
						"description": "Retrieve list of all groups"
					},
					"response": []
				},
				{
					"name": "store/websites - Retrieve list of all websites",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/store/websites",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"store",
								"websites"
							]
						},
						"description": "Retrieve list of all websites"
					},
					"response": []
				},
				{
					"name": "store/storeConfigs - Gets store configs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/store/storeConfigs?storeCodes={{storeCodes}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"store",
								"storeConfigs"
							],
							"query": [
								{
									"key": "storeCodes",
									"value": "{{storeCodes}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "directory/currency - Get currency information for the store",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/directory/currency",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"directory",
								"currency"
							]
						},
						"description": "Get currency information for the store."
					},
					"response": []
				},
				{
					"name": "directory/countries - Get all countries and regions information for the store",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/directory/countries",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"directory",
								"countries"
							]
						},
						"description": "Get all countries and regions information for the store."
					},
					"response": []
				},
				{
					"name": "directory/countries/:countryId - Get country and region information for the store",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/directory/countries/:countryId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"directory",
								"countries",
								":countryId"
							],
							"variable": [
								{
									"key": "countryId",
									"value": "{{countryId}}"
								}
							]
						},
						"description": "Get country and region information for the store."
					},
					"response": []
				},
				{
					"name": "eav/attribute-sets/list - Returns lists for attribute sets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/eav/attribute-sets/list?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"eav",
								"attribute-sets",
								"list"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Retrieve list of Attribute Sets This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#AttributeSetRepositoryInterface to determine which call to use to get detailed information about all attributes for an object."
					},
					"response": []
				},
				{
					"name": "eav/attribute-sets/:attributeSetId - Retrieve attribute set information based on given ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/eav/attribute-sets/:attributeSetId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"eav",
								"attribute-sets",
								":attributeSetId"
							],
							"variable": [
								{
									"key": "attributeSetId",
									"value": "{{attributeSetId}}"
								}
							]
						},
						"description": "Retrieve attribute set information based on given ID"
					},
					"response": []
				},
				{
					"name": "eav/attribute-sets/:attributeSetId - Save attribute set data",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/eav/attribute-sets/:attributeSetId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"eav",
								"attribute-sets",
								":attributeSetId"
							],
							"variable": [
								{
									"key": "attributeSetId",
									"value": "{{attributeSetId}}"
								}
							]
						},
						"description": "Save attribute set data"
					},
					"response": []
				},
				{
					"name": "eav/attribute-sets/:attributeSetId - Remove attribute set by given ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/eav/attribute-sets/:attributeSetId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"eav",
								"attribute-sets",
								":attributeSetId"
							],
							"variable": [
								{
									"key": "attributeSetId",
									"value": "{{attributeSetId}}"
								}
							]
						},
						"description": "Remove attribute set by given ID"
					},
					"response": []
				},
				{
					"name": "eav/attribute-sets - Create attribute set from data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/eav/attribute-sets",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"eav",
								"attribute-sets"
							]
						},
						"description": "Create attribute set from data"
					},
					"response": []
				},
				{
					"name": "customerGroups/:id - Get customer group by group ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customerGroups/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customerGroups",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get customer group by group ID."
					},
					"response": []
				},
				{
					"name": "customerGroups/:id - Save customer group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customerGroups/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customerGroups",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Save customer group."
					},
					"response": []
				},
				{
					"name": "customerGroups/:id - Delete customer group by ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customerGroups/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customerGroups",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete customer group by ID."
					},
					"response": []
				},
				{
					"name": "customerGroups/search - Searches customer groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customerGroups/search?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customerGroups",
								"search"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Retrieve customer groups. The list of groups can be filtered to exclude the NOT_LOGGED_IN group using the first parameter and/or it can be filtered by tax class. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#GroupRepositoryInterface to determine which call to use to get detailed information about all attributes for an object."
					},
					"response": []
				},
				{
					"name": "customerGroups - Save customer group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customerGroups",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customerGroups"
							]
						},
						"description": "Save customer group."
					},
					"response": []
				},
				{
					"name": "customerGroups/:storeId - Get default customer group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customerGroups/:storeId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customerGroups",
								":storeId"
							],
							"variable": [
								{
									"key": "storeId",
									"value": "{{storeId}}"
								}
							]
						},
						"description": "Get default customer group."
					},
					"response": []
				},
				{
					"name": "customerGroups - Get default customer group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customerGroups/default?storeId={{storeId}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customerGroups",
								"default"
							],
							"query": [
								{
									"key": "storeId",
									"value": "{{storeId}}"
								}
							]
						},
						"description": "Get default customer group."
					},
					"response": []
				},
				{
					"name": "customerGroups/:id/permissions - Check if customer group can be deleted",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customerGroups/:id/permissions",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customerGroups",
								":id",
								"permissions"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Check if customer group can be deleted."
					},
					"response": []
				},
				{
					"name": "customerGroups/:id - Set system default customer group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customerGroups/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customerGroups",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Set system default customer group."
					},
					"response": []
				},
				{
					"name": "attributeMetadata/customer/attribute/:attributeCode - Retrieve attribute metadata",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/attributeMetadata/customer/attribute/:attributeCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"attributeMetadata",
								"customer",
								"attribute",
								":attributeCode"
							],
							"variable": [
								{
									"key": "attributeCode",
									"value": "{{attributeCode}}"
								}
							]
						},
						"description": "Retrieve attribute metadata."
					},
					"response": []
				},
				{
					"name": "attributeMetadata/customer/form/:formCode - Retrieve all attributes filtered by form code",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/attributeMetadata/customer/form/:formCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"attributeMetadata",
								"customer",
								"form",
								":formCode"
							],
							"variable": [
								{
									"key": "formCode",
									"value": "{{formCode}}"
								}
							]
						},
						"description": "Retrieve all attributes filtered by form code"
					},
					"response": []
				},
				{
					"name": "attributeMetadata/customer - Get all attribute metadata",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/attributeMetadata/customer",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"attributeMetadata",
								"customer"
							]
						},
						"description": "Get all attribute metadata."
					},
					"response": []
				},
				{
					"name": "attributeMetadata/customer/custom - Get custom attributes metadata for the given data interface",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/attributeMetadata/customer/custom?dataInterfaceName={{dataInterfaceName}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"attributeMetadata",
								"customer",
								"custom"
							],
							"query": [
								{
									"key": "dataInterfaceName",
									"value": "{{dataInterfaceName}}"
								}
							]
						},
						"description": "Get custom attributes metadata for the given data interface."
					},
					"response": []
				},
				{
					"name": "attributeMetadata/customerAddress/attribute/:attributeCode - Retrieve attribute metadata",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/attributeMetadata/customerAddress/attribute/:attributeCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"attributeMetadata",
								"customerAddress",
								"attribute",
								":attributeCode"
							],
							"variable": [
								{
									"key": "attributeCode",
									"value": "{{attributeCode}}"
								}
							]
						},
						"description": "Retrieve attribute metadata."
					},
					"response": []
				},
				{
					"name": "attributeMetadata/customerAddress/form/:formCode - Retrieve all attributes filtered by form code",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/attributeMetadata/customerAddress/form/:formCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"attributeMetadata",
								"customerAddress",
								"form",
								":formCode"
							],
							"variable": [
								{
									"key": "formCode",
									"value": "{{formCode}}"
								}
							]
						},
						"description": "Retrieve all attributes filtered by form code"
					},
					"response": []
				},
				{
					"name": "attributeMetadata/customerAddress - Get all attribute metadata",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/attributeMetadata/customerAddress",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"attributeMetadata",
								"customerAddress"
							]
						},
						"description": "Get all attribute metadata."
					},
					"response": []
				},
				{
					"name": "attributeMetadata/customerAddress/custom - Get custom attributes metadata for the given data interface",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/attributeMetadata/customerAddress/custom?dataInterfaceName={{dataInterfaceName}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"attributeMetadata",
								"customerAddress",
								"custom"
							],
							"query": [
								{
									"key": "dataInterfaceName",
									"value": "{{dataInterfaceName}}"
								}
							]
						},
						"description": "Get custom attributes metadata for the given data interface."
					},
					"response": []
				},
				{
					"name": "customers/:customerId - Get customer by Customer ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/:customerId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								":customerId"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "{{customerId}}"
								}
							]
						},
						"description": "Get customer by Customer ID."
					},
					"response": []
				},
				{
					"name": "customers/:customerId - Create or update a customer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/:customerId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								":customerId"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "{{customerId}}"
								}
							]
						},
						"description": "Create or update a customer."
					},
					"response": []
				},
				{
					"name": "customers/:customerId - Delete customer by Customer ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/:customerId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								":customerId"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "{{customerId}}"
								}
							]
						},
						"description": "Delete customer by Customer ID."
					},
					"response": []
				},
				{
					"name": "customers/search - Searches customers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/search?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								"search"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Retrieve customers which match a specified criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#CustomerRepositoryInterface to determine which call to use to get detailed information about all attributes for an object."
					},
					"response": []
				},
				{
					"name": "customers - Create customer account. Perform necessary business operations like sending email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers"
							]
						},
						"description": "Create customer account. Perform necessary business operations like sending email."
					},
					"response": []
				},
				{
					"name": "customers/:email/activate - Activate a customer account using a key that was sent in a confirmation email",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/:email/activate",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								":email",
								"activate"
							],
							"variable": [
								{
									"key": "email",
									"value": "{{email}}"
								}
							]
						},
						"description": "Activate a customer account using a key that was sent in a confirmation email."
					},
					"response": []
				},
				{
					"name": "customers/:customerId/password/resetLinkToken/:resetPasswordLinkToken - Check if password reset token is valid",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/:customerId/password/resetLinkToken/:resetPasswordLinkToken",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								":customerId",
								"password",
								"resetLinkToken",
								":resetPasswordLinkToken"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "{{customerId}}"
								},
								{
									"key": "resetPasswordLinkToken",
									"value": "{{resetPasswordLinkToken}}"
								}
							]
						},
						"description": "Check if password reset token is valid."
					},
					"response": []
				},
				{
					"name": "customers/password - Send an email to the customer with a password reset link",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/password",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								"password"
							]
						},
						"description": "Send an email to the customer with a password reset link."
					},
					"response": []
				},
				{
					"name": "customers/resetPassword - Reset customer password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/resetPassword",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								"resetPassword"
							]
						},
						"description": "Reset customer password."
					},
					"response": []
				},
				{
					"name": "customers/:customerId/confirm - Gets the account confirmation status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/:customerId/confirm",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								":customerId",
								"confirm"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "{{customerId}}"
								}
							]
						},
						"description": "Gets the account confirmation status."
					},
					"response": []
				},
				{
					"name": "customers/confirm - Resend confirmation email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/confirm",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								"confirm"
							]
						},
						"description": "Resend confirmation email."
					},
					"response": []
				},
				{
					"name": "customers/validate - Validate customer data",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/validate",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								"validate"
							]
						},
						"description": "Validate customer data."
					},
					"response": []
				},
				{
					"name": "customers/:customerId/permissions/readonly - Check if customer can be deleted",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/:customerId/permissions/readonly",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								":customerId",
								"permissions",
								"readonly"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "{{customerId}}"
								}
							]
						},
						"description": "Check if customer can be deleted."
					},
					"response": []
				},
				{
					"name": "customers/isEmailAvailable - Check if given email is associated with a customer account in given website",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/isEmailAvailable",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								"isEmailAvailable"
							]
						},
						"description": "Check if given email is associated with a customer account in given website."
					},
					"response": []
				},
				{
					"name": "customers/:customerId/billingAddress - Retrieve default billing address for the given customerId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/:customerId/billingAddress",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								":customerId",
								"billingAddress"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "{{customerId}}"
								}
							]
						},
						"description": "Retrieve default billing address for the given customerId."
					},
					"response": []
				},
				{
					"name": "customers/:customerId/shippingAddress - Retrieve default shipping address for the given customerId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/:customerId/shippingAddress",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								":customerId",
								"shippingAddress"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "{{customerId}}"
								}
							]
						},
						"description": "Retrieve default shipping address for the given customerId."
					},
					"response": []
				},
				{
					"name": "customers/addresses/:addressId - Retrieve customer address",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/addresses/:addressId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								"addresses",
								":addressId"
							],
							"variable": [
								{
									"key": "addressId",
									"value": "{{addressId}}"
								}
							]
						},
						"description": "Retrieve customer address."
					},
					"response": []
				},
				{
					"name": "addresses/:addressId - Delete customer address by ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/addresses/:addressId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"addresses",
								":addressId"
							],
							"variable": [
								{
									"key": "addressId",
									"value": "{{addressId}}"
								}
							]
						},
						"description": "Delete customer address by ID."
					},
					"response": []
				},
				{
					"name": "modules - Returns an array of enabled modules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/modules",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"modules"
							]
						},
						"description": "Returns an array of enabled modules"
					},
					"response": []
				},
				{
					"name": "cmsPage/:pageId - Retrieve page",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/cmsPage/:pageId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"cmsPage",
								":pageId"
							],
							"variable": [
								{
									"key": "pageId",
									"value": "{{pageId}}"
								}
							]
						},
						"description": "Retrieve page."
					},
					"response": []
				},
				{
					"name": "cmsPage/:pageId - Delete page by ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/cmsPage/:pageId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"cmsPage",
								":pageId"
							],
							"variable": [
								{
									"key": "pageId",
									"value": "{{pageId}}"
								}
							]
						},
						"description": "Delete page by ID."
					},
					"response": []
				},
				{
					"name": "cmsPage/search - Retrieve pages matching the specified criteria",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/cmsPage/search?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"cmsPage",
								"search"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Retrieve pages matching the specified criteria."
					},
					"response": []
				},
				{
					"name": "cmsPage - Save page",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/cmsPage",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"cmsPage"
							]
						},
						"description": "Save page."
					},
					"response": []
				},
				{
					"name": "cmsPage/:id - Save page",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/cmsPage/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"cmsPage",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Save page."
					},
					"response": []
				},
				{
					"name": "cmsBlock/:blockId - Retrieve block",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/cmsBlock/:blockId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"cmsBlock",
								":blockId"
							],
							"variable": [
								{
									"key": "blockId",
									"value": "{{blockId}}"
								}
							]
						},
						"description": "Retrieve block."
					},
					"response": []
				},
				{
					"name": "cmsBlock/:blockId - Delete block by ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/cmsBlock/:blockId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"cmsBlock",
								":blockId"
							],
							"variable": [
								{
									"key": "blockId",
									"value": "{{blockId}}"
								}
							]
						},
						"description": "Delete block by ID."
					},
					"response": []
				},
				{
					"name": "cmsBlock/search - Retrieve blocks matching the specified criteria",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/cmsBlock/search?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"cmsBlock",
								"search"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Retrieve blocks matching the specified criteria."
					},
					"response": []
				},
				{
					"name": "cmsBlock - Save block",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/cmsBlock",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"cmsBlock"
							]
						},
						"description": "Save block."
					},
					"response": []
				},
				{
					"name": "cmsBlock/:id - Save block",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/cmsBlock/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"cmsBlock",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Save block."
					},
					"response": []
				},
				{
					"name": "products - Get product list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Get product list"
					},
					"response": []
				},
				{
					"name": "products - Create product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products"
							]
						},
						"description": "Create product"
					},
					"response": []
				},
				{
					"name": "products/:sku - Get info about product by product SKU",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku?editMode={{editMode}}&storeId={{storeId}}&forceReload={{forceReload}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku"
							],
							"query": [
								{
									"key": "editMode",
									"value": "{{editMode}}"
								},
								{
									"key": "storeId",
									"value": "{{storeId}}"
								},
								{
									"key": "forceReload",
									"value": "{{forceReload}}"
								}
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						},
						"description": "Get info about product by product SKU"
					},
					"response": []
				},
				{
					"name": "products/:sku - Create product",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						},
						"description": "Create product"
					},
					"response": []
				},
				{
					"name": "products/:sku - Delete Product by id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "products/attributes/types - Retrieve list of product attribute types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attributes/types",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attributes",
								"types"
							]
						},
						"description": "Retrieve list of product attribute types"
					},
					"response": []
				},
				{
					"name": "products/attributes/:attributeCode - Retrieve specific attribute",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attributes/:attributeCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attributes",
								":attributeCode"
							],
							"variable": [
								{
									"key": "attributeCode",
									"value": "{{attributeCode}}"
								}
							]
						},
						"description": "Retrieve specific attribute"
					},
					"response": []
				},
				{
					"name": "products/attributes/:attributeCode - Save attribute data",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attributes/:attributeCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attributes",
								":attributeCode"
							],
							"variable": [
								{
									"key": "attributeCode",
									"value": "{{attributeCode}}"
								}
							]
						},
						"description": "Save attribute data"
					},
					"response": []
				},
				{
					"name": "products/attributes/:attributeCode - Delete Attribute by id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attributes/:attributeCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attributes",
								":attributeCode"
							],
							"variable": [
								{
									"key": "attributeCode",
									"value": "{{attributeCode}}"
								}
							]
						},
						"description": "Delete Attribute by id"
					},
					"response": []
				},
				{
					"name": "products/attributes - Retrieve all attributes for entity type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attributes?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attributes"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Retrieve all attributes for entity type"
					},
					"response": []
				},
				{
					"name": "products/attributes - Save attribute data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attributes",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attributes"
							]
						},
						"description": "Save attribute data"
					},
					"response": []
				},
				{
					"name": "categories/attributes/:attributeCode - Retrieve specific attribute",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/categories/attributes/:attributeCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"categories",
								"attributes",
								":attributeCode"
							],
							"variable": [
								{
									"key": "attributeCode",
									"value": "{{attributeCode}}"
								}
							]
						},
						"description": "Retrieve specific attribute"
					},
					"response": []
				},
				{
					"name": "categories/attributes - Retrieve all attributes for entity type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/categories/attributes?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"categories",
								"attributes"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Retrieve all attributes for entity type"
					},
					"response": []
				},
				{
					"name": "categories/attributes/:attributeCode/options - Retrieve list of attribute options",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/categories/attributes/:attributeCode/options",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"categories",
								"attributes",
								":attributeCode",
								"options"
							],
							"variable": [
								{
									"key": "attributeCode",
									"value": "{{attributeCode}}"
								}
							]
						},
						"description": "Retrieve list of attribute options"
					},
					"response": []
				},
				{
					"name": "products/types - Retrieve available product types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/types",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"types"
							]
						},
						"description": "Retrieve available product types"
					},
					"response": []
				},
				{
					"name": "products/attribute-sets/sets/list - Retrieve list of Attribute Sets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attribute-sets/sets/list?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attribute-sets",
								"sets",
								"list"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Retrieve list of Attribute Sets"
					},
					"response": []
				},
				{
					"name": "products/attribute-sets/:attributeSetId - Retrieve attribute set information based on given ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attribute-sets/:attributeSetId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attribute-sets",
								":attributeSetId"
							],
							"variable": [
								{
									"key": "attributeSetId",
									"value": "{{attributeSetId}}"
								}
							]
						},
						"description": "Retrieve attribute set information based on given ID"
					},
					"response": []
				},
				{
					"name": "products/attribute-sets/:attributeSetId - Save attribute set data",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attribute-sets/:attributeSetId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attribute-sets",
								":attributeSetId"
							],
							"variable": [
								{
									"key": "attributeSetId",
									"value": "{{attributeSetId}}"
								}
							]
						},
						"description": "Save attribute set data"
					},
					"response": []
				},
				{
					"name": "products/attribute-sets/:attributeSetId - Remove attribute set by given ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attribute-sets/:attributeSetId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attribute-sets",
								":attributeSetId"
							],
							"variable": [
								{
									"key": "attributeSetId",
									"value": "{{attributeSetId}}"
								}
							]
						},
						"description": "Remove attribute set by given ID"
					},
					"response": []
				},
				{
					"name": "products/attribute-sets - Create attribute set from data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attribute-sets",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attribute-sets"
							]
						},
						"description": "Create attribute set from data"
					},
					"response": []
				},
				{
					"name": "products/attribute-sets/:attributeSetId/attributes - Retrieve related attributes based on given attribute set ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attribute-sets/:attributeSetId/attributes",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attribute-sets",
								":attributeSetId",
								"attributes"
							],
							"variable": [
								{
									"key": "attributeSetId",
									"value": "{{attributeSetId}}"
								}
							]
						},
						"description": "Retrieve related attributes based on given attribute set ID"
					},
					"response": []
				},
				{
					"name": "products/attribute-sets/attributes - Assign attribute to attribute set",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attribute-sets/attributes",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attribute-sets",
								"attributes"
							]
						},
						"description": "Assign attribute to attribute set"
					},
					"response": []
				},
				{
					"name": "products/attribute-sets/:attributeSetId/attributes/:attributeCode - Remove attribute from attribute set",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attribute-sets/:attributeSetId/attributes/:attributeCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attribute-sets",
								":attributeSetId",
								"attributes",
								":attributeCode"
							],
							"variable": [
								{
									"key": "attributeSetId",
									"value": "{{attributeSetId}}"
								},
								{
									"key": "attributeCode",
									"value": "{{attributeCode}}"
								}
							]
						},
						"description": "Remove attribute from attribute set"
					},
					"response": []
				},
				{
					"name": "products/attribute-sets/groups/list - Retrieve list of attribute groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attribute-sets/groups/list?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attribute-sets",
								"groups",
								"list"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Retrieve list of attribute groups"
					},
					"response": []
				},
				{
					"name": "products/attribute-sets/groups - Save attribute group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attribute-sets/groups",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attribute-sets",
								"groups"
							]
						},
						"description": "Save attribute group"
					},
					"response": []
				},
				{
					"name": "products/attribute-sets/:attributeSetId/groups - Save attribute group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attribute-sets/:attributeSetId/groups",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attribute-sets",
								":attributeSetId",
								"groups"
							],
							"variable": [
								{
									"key": "attributeSetId",
									"value": "{{attributeSetId}}"
								}
							]
						},
						"description": "Save attribute group"
					},
					"response": []
				},
				{
					"name": "products/attribute-sets/groups/:groupId - Remove attribute group by id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attribute-sets/groups/:groupId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attribute-sets",
								"groups",
								":groupId"
							],
							"variable": [
								{
									"key": "groupId",
									"value": "{{groupId}}"
								}
							]
						},
						"description": "Remove attribute group by id"
					},
					"response": []
				},
				{
					"name": "products/attributes/:attributeCode/options - Retrieve list of attribute options",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attributes/:attributeCode/options",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attributes",
								":attributeCode",
								"options"
							],
							"variable": [
								{
									"key": "attributeCode",
									"value": "{{attributeCode}}"
								}
							]
						},
						"description": "Retrieve list of attribute options"
					},
					"response": []
				},
				{
					"name": "products/attributes/:attributeCode/options - Add option to attribute",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attributes/:attributeCode/options",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attributes",
								":attributeCode",
								"options"
							],
							"variable": [
								{
									"key": "attributeCode",
									"value": "{{attributeCode}}"
								}
							]
						},
						"description": "Add option to attribute"
					},
					"response": []
				},
				{
					"name": "products/attributes/:attributeCode/options/:optionId - Delete option from attribute",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/attributes/:attributeCode/options/:optionId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"attributes",
								":attributeCode",
								"options",
								":optionId"
							],
							"variable": [
								{
									"key": "attributeCode",
									"value": "{{attributeCode}}"
								},
								{
									"key": "optionId",
									"value": "{{optionId}}"
								}
							]
						},
						"description": "Delete option from attribute"
					},
					"response": []
				},
				{
					"name": "products/media/types/:attributeSetName - Retrieve the list of media attributes (fronted input type is media_image) assigned to the given attribute set",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/media/types/:attributeSetName",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"media",
								"types",
								":attributeSetName"
							],
							"variable": [
								{
									"key": "attributeSetName",
									"value": "{{attributeSetName}}"
								}
							]
						},
						"description": "Retrieve the list of media attributes (fronted input type is media_image) assigned to the given attribute set."
					},
					"response": []
				},
				{
					"name": "products/:sku/media/:entryId - Return information about gallery entry",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/media/:entryId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"media",
								":entryId"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "entryId",
									"value": "{{entryId}}"
								}
							]
						},
						"description": "Return information about gallery entry"
					},
					"response": []
				},
				{
					"name": "products/:sku/media/:entryId - Update gallery entry",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/media/:entryId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"media",
								":entryId"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "entryId",
									"value": "{{entryId}}"
								}
							]
						},
						"description": "Update gallery entry"
					},
					"response": []
				},
				{
					"name": "products/:sku/media/:entryId - Remove gallery entry",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/media/:entryId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"media",
								":entryId"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "entryId",
									"value": "{{entryId}}"
								}
							]
						},
						"description": "Remove gallery entry"
					},
					"response": []
				},
				{
					"name": "products/:sku/media - Retrieve the list of gallery entries associated with given product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/media",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"media"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						},
						"description": "Retrieve the list of gallery entries associated with given product"
					},
					"response": []
				},
				{
					"name": "products/:sku/media - Create new gallery entry",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/media",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"media"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						},
						"description": "Create new gallery entry"
					},
					"response": []
				},
				{
					"name": "products/:sku/group-prices/:customerGroupId/tiers - Get tier price of product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/group-prices/:customerGroupId/tiers",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"group-prices",
								":customerGroupId",
								"tiers"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "customerGroupId",
									"value": "{{customerGroupId}}"
								}
							]
						},
						"description": "Get tier price of product"
					},
					"response": []
				},
				{
					"name": "products/:sku/group-prices/:customerGroupId/tiers/:qty/price/:price - Create tier price for product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/group-prices/:customerGroupId/tiers/:qty/price/:price",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"group-prices",
								":customerGroupId",
								"tiers",
								":qty",
								"price",
								":price"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "customerGroupId",
									"value": "{{customerGroupId}}"
								},
								{
									"key": "price",
									"value": "{{price}}"
								},
								{
									"key": "qty",
									"value": "{{qty}}"
								}
							]
						},
						"description": "Create tier price for product"
					},
					"response": []
				},
				{
					"name": "products/:sku/group-prices/:customerGroupId/tiers/:qty - Remove tier price from product",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/group-prices/:customerGroupId/tiers/:qty",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"group-prices",
								":customerGroupId",
								"tiers",
								":qty"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "customerGroupId",
									"value": "{{customerGroupId}}"
								},
								{
									"key": "qty",
									"value": "{{qty}}"
								}
							]
						},
						"description": "Remove tier price from product"
					},
					"response": []
				},
				{
					"name": "products/tier-prices-information - Return product prices. In case of at least one of skus is not found exception will be thrown",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/tier-prices-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"tier-prices-information"
							]
						},
						"description": "Return product prices. In case of at least one of skus is not found exception will be thrown."
					},
					"response": []
				},
				{
					"name": "products/tier-prices - Add/update product tier prices",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"prices\": [\n    {\n      \"price\": 0,\n      \"price_type\": \"fixed\",\n      \"website_id\": 0,\n      \"sku\": \"string\",\n      \"customer_group\": \"string\",\n      \"quantity\": 0,\n      \"extension_attributes\": {}\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/tier-prices",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"tier-prices"
							]
						},
						"description": "Remove existing tier prices and replace them with the new ones. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from replace list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown."
					},
					"response": []
				},
				{
					"name": "products/tier-prices - Create product tier prices",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/tier-prices",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"tier-prices"
							]
						},
						"description": "Add or update product prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown."
					},
					"response": []
				},
				{
					"name": "products/tier-prices-delete - Deletes product tier prices",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/tier-prices-delete",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"tier-prices-delete"
							]
						},
						"description": "Delete product tier prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from delete list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown."
					},
					"response": []
				},
				{
					"name": "products/base-prices-information - Return product prices. In case of at least one of skus is not found exception will be thrown",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/base-prices-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"base-prices-information"
							]
						},
						"description": "Return product prices. In case of at least one of skus is not found exception will be thrown."
					},
					"response": []
				},
				{
					"name": "products/base-prices - Updates product base prices",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/base-prices",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"base-prices"
							]
						},
						"description": "Add or update product prices. Input item should correspond \\Magento\\Catalog\\Api\\Data\\CostInterface. If any items will have invalid price, store id or sku, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown."
					},
					"response": []
				},
				{
					"name": "products/cost-information - Return product prices. In case of at least one of skus is not found exception will be thrown",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/cost-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"cost-information"
							]
						},
						"description": "Return product prices. In case of at least one of skus is not found exception will be thrown."
					},
					"response": []
				},
				{
					"name": "products/cost - Updates product cost",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/cost",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"cost"
							]
						},
						"description": "Add or update product cost. Input item should correspond to \\Magento\\Catalog\\Api\\Data\\CostInterface. If any items will have invalid cost, store id or sku, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown."
					},
					"response": []
				},
				{
					"name": "products/cost-delete - Delete product cost. In case of at least one of skus is not found exception will be thrown. If error occurred during the delete exception will be thrown",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/cost-delete",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"cost-delete"
							]
						},
						"description": "Delete product cost. In case of at least one of skus is not found exception will be thrown. If error occurred during the delete exception will be thrown."
					},
					"response": []
				},
				{
					"name": "products/special-price-information - Return product's special price. In case of at least one of skus is not found exception will be thrown",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/special-price-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"special-price-information"
							]
						},
						"description": "Return product's special price. In case of at least one of skus is not found exception will be thrown."
					},
					"response": []
				},
				{
					"name": "products/special-price - Updates product special price",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/special-price",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"special-price"
							]
						},
						"description": "Add or update product's special price. If any items will have invalid price, store id, sku or dates, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown."
					},
					"response": []
				},
				{
					"name": "products/special-price-delete - Deletes product special price",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/special-price-delete",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"special-price-delete"
							]
						},
						"description": "Delete product's special price. If any items will have invalid price, store id, sku or dates, they will be marked as failed and excluded from delete list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the delete exception will be thrown."
					},
					"response": []
				},
				{
					"name": "categories/:categoryId - Get info about category by category id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/categories/:categoryId?storeId={{storeId}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"categories",
								":categoryId"
							],
							"query": [
								{
									"key": "storeId",
									"value": "{{storeId}}"
								}
							],
							"variable": [
								{
									"key": "categoryId",
									"value": "{{categoryId}}"
								}
							]
						},
						"description": "Get info about category by category id"
					},
					"response": []
				},
				{
					"name": "categories/:categoryId - Delete category by identifier",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/categories/:categoryId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"categories",
								":categoryId"
							],
							"variable": [
								{
									"key": "categoryId",
									"value": "{{categoryId}}"
								}
							]
						},
						"description": "Delete category by identifier"
					},
					"response": []
				},
				{
					"name": "categories - Retrieve list of categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/categories?rootCategoryId={{rootCategoryId}}&depth={{depth}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"categories"
							],
							"query": [
								{
									"key": "rootCategoryId",
									"value": "{{rootCategoryId}}"
								},
								{
									"key": "depth",
									"value": "{{depth}}"
								}
							]
						},
						"description": "Retrieve list of categories"
					},
					"response": []
				},
				{
					"name": "categories - Create category service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/categories",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"categories"
							]
						},
						"description": "Create category service"
					},
					"response": []
				},
				{
					"name": "categories/:id - Create category service",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/categories/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"categories",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create category service"
					},
					"response": []
				},
				{
					"name": "categories/:categoryId/move - Move category",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/categories/:categoryId/move",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"categories",
								":categoryId",
								"move"
							],
							"variable": [
								{
									"key": "categoryId",
									"value": "{{categoryId}}"
								}
							]
						},
						"description": "Move category"
					},
					"response": []
				},
				{
					"name": "categories/list - Get category list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/categories/list?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"categories",
								"list"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Get category list"
					},
					"response": []
				},
				{
					"name": "products/options/types - Get custom option types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/options/types",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"options",
								"types"
							]
						},
						"description": "Get custom option types"
					},
					"response": []
				},
				{
					"name": "products/:sku/options - Get the list of custom options for a specific product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/options",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"options"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						},
						"description": "Get the list of custom options for a specific product"
					},
					"response": []
				},
				{
					"name": "products/:sku/options/:optionId - Get custom option for a specific product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/options/:optionId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"options",
								":optionId"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "optionId",
									"value": "{{optionId}}"
								}
							]
						},
						"description": "Get custom option for a specific product"
					},
					"response": []
				},
				{
					"name": "products/:sku/options/:optionId - Delete custom option for a specified product",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/options/:optionId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"options",
								":optionId"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "optionId",
									"value": "{{optionId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "products/options - Save Custom Option",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/options",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"options"
							]
						},
						"description": "Save Custom Option"
					},
					"response": []
				},
				{
					"name": "products/options/:optionId - Save Custom Option",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/options/:optionId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"options",
								":optionId"
							],
							"variable": [
								{
									"key": "optionId",
									"value": "{{optionId}}"
								}
							]
						},
						"description": "Save Custom Option"
					},
					"response": []
				},
				{
					"name": "products/links/types - Retrieve information about available product link types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/links/types",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"links",
								"types"
							]
						},
						"description": "Retrieve information about available product link types"
					},
					"response": []
				},
				{
					"name": "products/links/:type/attributes - Provide a list of the product link type attributes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/links/:type/attributes",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"links",
								":type",
								"attributes"
							],
							"variable": [
								{
									"key": "type",
									"value": "{{type}}"
								}
							]
						},
						"description": "Provide a list of the product link type attributes"
					},
					"response": []
				},
				{
					"name": "products/:sku/links/:type - Provide the list of links for a specific product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/links/:type",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"links",
								":type"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "type",
									"value": "{{type}}"
								}
							]
						},
						"description": "Provide the list of links for a specific product"
					},
					"response": []
				},
				{
					"name": "products/:sku/links - Save product link",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/links",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"links"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						},
						"description": "Save product link"
					},
					"response": []
				},
				{
					"name": "products/:sku/links - Assign a product link to another product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/links",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"links"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						},
						"description": "Assign a product link to another product"
					},
					"response": []
				},
				{
					"name": "products/:sku/links/:type/:linkedProductSku - Deletes linkedProductSku for a sku type",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/links/:type/:linkedProductSku",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"links",
								":type",
								":linkedProductSku"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "type",
									"value": "{{type}}"
								},
								{
									"key": "linkedProductSku",
									"value": "{{linkedProductSku}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "categories/:categoryId/products - Get products assigned to category",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/categories/:categoryId/products",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"categories",
								":categoryId",
								"products"
							],
							"variable": [
								{
									"key": "categoryId",
									"value": "{{categoryId}}"
								}
							]
						},
						"description": "Get products assigned to category"
					},
					"response": []
				},
				{
					"name": "categories/:categoryId/products - Assign a product to the required category",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/categories/:categoryId/products",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"categories",
								":categoryId",
								"products"
							],
							"variable": [
								{
									"key": "categoryId",
									"value": "{{categoryId}}"
								}
							]
						},
						"description": "Assign a product to the required category"
					},
					"response": []
				},
				{
					"name": "categories/:categoryId/products - Assign a product to the required category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/categories/:categoryId/products",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"categories",
								":categoryId",
								"products"
							],
							"variable": [
								{
									"key": "categoryId",
									"value": "{{categoryId}}"
								}
							]
						},
						"description": "Assign a product to the required category"
					},
					"response": []
				},
				{
					"name": "categories/:categoryId/products/:sku - Remove the product assignment from the category by category id and sku",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/categories/:categoryId/products/:sku",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"categories",
								":categoryId",
								"products",
								":sku"
							],
							"variable": [
								{
									"key": "categoryId",
									"value": "{{categoryId}}"
								},
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						},
						"description": "Remove the product assignment from the category by category id and sku"
					},
					"response": []
				},
				{
					"name": "products/:sku/websites - Assign a product to the website",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/websites",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"websites"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						},
						"description": "Assign a product to the website"
					},
					"response": []
				},
				{
					"name": "products/:sku/websites - Assign a product to the website",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/websites",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"websites"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						},
						"description": "Assign a product to the website"
					},
					"response": []
				},
				{
					"name": "products/:sku/websites/:websiteId - Remove the website assignment from the product by product sku",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/websites/:websiteId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"websites",
								":websiteId"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "websiteId",
									"value": "{{websiteId}}"
								}
							]
						},
						"description": "Remove the website assignment from the product by product sku"
					},
					"response": []
				},
				{
					"name": "products-render-info - Collect and retrieve the list of product render info This info contains raw prices and formated prices, product name, stock status, store_id, etc",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products-render-info?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}&storeId={{storeId}}&currencyCode={{currencyCode}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products-render-info"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								},
								{
									"key": "storeId",
									"value": "{{storeId}}"
								},
								{
									"key": "currencyCode",
									"value": "{{currencyCode}}"
								}
							]
						},
						"description": "Collect and retrieve the list of product render info This info contains raw prices and formated prices, product name, stock status, store_id, etc"
					},
					"response": []
				},
				{
					"name": "stockItems/:productSku - Returns stock items for a product sku",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/stockItems/:productSku?scopeId={{scopeId}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"stockItems",
								":productSku"
							],
							"query": [
								{
									"key": "scopeId",
									"value": "{{scopeId}}"
								}
							],
							"variable": [
								{
									"key": "productSku",
									"value": "{{productSku}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "products/:productSku/stockItems/:itemId - Updates stock items for a product sku",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:productSku/stockItems/:itemId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":productSku",
								"stockItems",
								":itemId"
							],
							"variable": [
								{
									"key": "productSku",
									"value": "{{productSku}}"
								},
								{
									"key": "itemId",
									"value": "{{itemId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "stockItems/lowStock - Retrieves a list of SKU's with low inventory qty",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/stockItems/lowStock/?scopeId={{scopeId}}&qty={{qty}}&currentPage={{currentPage}}&pageSize={{pageSize}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"stockItems",
								"lowStock",
								""
							],
							"query": [
								{
									"key": "scopeId",
									"value": "{{scopeId}}"
								},
								{
									"key": "qty",
									"value": "{{qty}}"
								},
								{
									"key": "currentPage",
									"value": "{{currentPage}}"
								},
								{
									"key": "pageSize",
									"value": "{{pageSize}}"
								}
							]
						},
						"description": "Retrieves a list of SKU's with low inventory qty"
					},
					"response": []
				},
				{
					"name": "stockStatuses/:productSku - Returns stock statuses for a product sku",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/stockStatuses/:productSku?scopeId={{scopeId}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"stockStatuses",
								":productSku"
							],
							"query": [
								{
									"key": "scopeId",
									"value": "{{scopeId}}"
								}
							],
							"variable": [
								{
									"key": "productSku",
									"value": "{{productSku}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "bundle-products/:sku/links/:optionId - Add child product to specified Bundle option by product sku",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/bundle-products/:sku/links/:optionId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"bundle-products",
								":sku",
								"links",
								":optionId"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "optionId",
									"value": "{{optionId}}"
								}
							]
						},
						"description": "Add child product to specified Bundle option by product sku"
					},
					"response": []
				},
				{
					"name": "bundle-products/:sku/links/:id - Updates links for a bundle product sku",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/bundle-products/:sku/links/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"bundle-products",
								":sku",
								"links",
								":id"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "bundle-products/:productSku/children - Get all children for Bundle product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/bundle-products/:productSku/children?optionId={{optionId}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"bundle-products",
								":productSku",
								"children"
							],
							"query": [
								{
									"key": "optionId",
									"value": "{{optionId}}"
								}
							],
							"variable": [
								{
									"key": "productSku",
									"value": "{{productSku}}"
								}
							]
						},
						"description": "Get all children for Bundle product"
					},
					"response": []
				},
				{
					"name": "bundle-products/:sku/options/:optionId/children/:childSku - Remove product from Bundle product option",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/bundle-products/:sku/options/:optionId/children/:childSku",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"bundle-products",
								":sku",
								"options",
								":optionId",
								"children",
								":childSku"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "optionId",
									"value": "{{optionId}}"
								},
								{
									"key": "childSku",
									"value": "{{childSku}}"
								}
							]
						},
						"description": "Remove product from Bundle product option"
					},
					"response": []
				},
				{
					"name": "bundle-products/:sku/options/all - Get all options for bundle product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/bundle-products/:sku/options/all",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"bundle-products",
								":sku",
								"options",
								"all"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						},
						"description": "Get all options for bundle product"
					},
					"response": []
				},
				{
					"name": "bundle-products/:sku/options/:optionId - Get option for bundle product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/bundle-products/:sku/options/:optionId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"bundle-products",
								":sku",
								"options",
								":optionId"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "optionId",
									"value": "{{optionId}}"
								}
							]
						},
						"description": "Get option for bundle product"
					},
					"response": []
				},
				{
					"name": "bundle-products/:sku/options/:optionId - Remove bundle option",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/bundle-products/:sku/options/:optionId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"bundle-products",
								":sku",
								"options",
								":optionId"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "optionId",
									"value": "{{optionId}}"
								}
							]
						},
						"description": "Remove bundle option"
					},
					"response": []
				},
				{
					"name": "bundle-products/options/types - Get all types for options for bundle products",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/bundle-products/options/types",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"bundle-products",
								"options",
								"types"
							]
						},
						"description": "Get all types for options for bundle products"
					},
					"response": []
				},
				{
					"name": "bundle-products/options/add - Add new option for bundle product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/bundle-products/options/add",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"bundle-products",
								"options",
								"add"
							]
						},
						"description": "Add new option for bundle product"
					},
					"response": []
				},
				{
					"name": "bundle-products/options/:optionId - Add new option for bundle product",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/bundle-products/options/:optionId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"bundle-products",
								"options",
								":optionId"
							],
							"variable": [
								{
									"key": "optionId",
									"value": "{{optionId}}"
								}
							]
						},
						"description": "Add new option for bundle product"
					},
					"response": []
				},
				{
					"name": "carts/:cartId - Enables an administrative user to return information for a specified cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Enables an administrative user to return information for a specified cart."
					},
					"response": []
				},
				{
					"name": "carts/:cartId - Assigns a specified customer to a specified shopping cart",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Assigns a specified customer to a specified shopping cart."
					},
					"response": []
				},
				{
					"name": "carts/search - Searches carts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/search?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"search"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Enables administrative users to list carts that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See http://devdocs.magento.com/codelinks/attributes.html#CartRepositoryInterface to determine which call to use to get detailed information about all attributes for an object."
					},
					"response": []
				},
				{
					"name": "customers/:customerId/carts - Creates an empty cart and quote for a specified customer if customer does not have a cart yet",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/customers/:customerId/carts",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"customers",
								":customerId",
								"carts"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "{{customerId}}"
								}
							]
						},
						"description": "Creates an empty cart and quote for a specified customer if customer does not have a cart yet."
					},
					"response": []
				},
				{
					"name": "carts/:cartId/order - Places an order for a specified cart",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/order",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"order"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Places an order for a specified cart."
					},
					"response": []
				},
				{
					"name": "carts/:cartId/shipping-methods - Lists applicable shipping methods for a specified quote",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/shipping-methods",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"shipping-methods"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Lists applicable shipping methods for a specified quote."
					},
					"response": []
				},
				{
					"name": "carts/:cartId/estimate-shipping-methods-by-address-id - Estimate shipping",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/estimate-shipping-methods-by-address-id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"estimate-shipping-methods-by-address-id"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Estimate shipping"
					},
					"response": []
				},
				{
					"name": "carts/:cartId/estimate-shipping-methods - Estimate shipping by address and return list of available shipping methods",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/estimate-shipping-methods",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"estimate-shipping-methods"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Estimate shipping by address and return list of available shipping methods"
					},
					"response": []
				},
				{
					"name": "carts/:cartId/items - Lists items that are assigned to a specified cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/items",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"items"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Lists items that are assigned to a specified cart."
					},
					"response": []
				},
				{
					"name": "carts/:quoteId/items - Add/update the specified cart item",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:quoteId/items",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":quoteId",
								"items"
							],
							"variable": [
								{
									"key": "quoteId",
									"value": "{{quoteId}}"
								}
							]
						},
						"description": "Add/update the specified cart item."
					},
					"response": []
				},
				{
					"name": "carts/:cartId/items/:itemId - Add/update the specified cart item",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/items/:itemId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"items",
								":itemId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								},
								{
									"key": "itemId",
									"value": "{{itemId}}"
								}
							]
						},
						"description": "Add/update the specified cart item."
					},
					"response": []
				},
				{
					"name": "carts/:cartId/items/:itemId - Removes the specified item from the specified cart",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/items/:itemId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"items",
								":itemId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								},
								{
									"key": "itemId",
									"value": "{{itemId}}"
								}
							]
						},
						"description": "Removes the specified item from the specified cart."
					},
					"response": []
				},
				{
					"name": "carts/:cartId/selected-payment-method - Returns the payment method for a specified shopping cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/selected-payment-method",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"selected-payment-method"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Returns the payment method for a specified shopping cart."
					},
					"response": []
				},
				{
					"name": "carts/:cartId/selected-payment-method - Adds a specified payment method to a specified shopping cart",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/selected-payment-method",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"selected-payment-method"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Adds a specified payment method to a specified shopping cart."
					},
					"response": []
				},
				{
					"name": "carts/:cartId/payment-methods - Returns available payment methods for a specified shopping cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/payment-methods",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"payment-methods"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Lists available payment methods for a specified shopping cart. This call returns an array of objects, but detailed information about each object’s attributes might not be included.  See http://devdocs.magento.com/codelinks/attributes.html#PaymentMethodManagementInterface to determine which call to use to get detailed information about all attributes for an object."
					},
					"response": []
				},
				{
					"name": "carts/:cartId/billing-address - Returns the billing address for a specified quote",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/billing-address",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"billing-address"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Returns the billing address for a specified quote."
					},
					"response": []
				},
				{
					"name": "carts/:cartId/billing-address - Assigns a specified billing address to a specified cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/billing-address",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"billing-address"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Assigns a specified billing address to a specified cart."
					},
					"response": []
				},
				{
					"name": "carts/:cartId/coupons - Returns information for a coupon in a specified cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/coupons",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"coupons"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Returns information for a coupon in a specified cart."
					},
					"response": []
				},
				{
					"name": "carts/:cartId/coupons - Deletes a coupon from a specified cart",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/coupons",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"coupons"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Deletes a coupon from a specified cart."
					},
					"response": []
				},
				{
					"name": "carts/:cartId/coupons/:couponCode - Adds a coupon by code to a specified cart",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/coupons/:couponCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"coupons",
								":couponCode"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								},
								{
									"key": "couponCode",
									"value": "{{couponCode}}"
								}
							]
						},
						"description": "Adds a coupon by code to a specified cart."
					},
					"response": []
				},
				{
					"name": "carts/:cartId/totals - Returns quote totals data for a specified cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/totals",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"totals"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Returns quote totals data for a specified cart."
					},
					"response": []
				},
				{
					"name": "requisition_lists - Save Requisition List",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/requisition_lists",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"requisition_lists"
							]
						},
						"description": "Save Requisition List"
					},
					"response": []
				},
				{
					"name": "search - Make Full Text Search and return found Documents",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/search?searchCriteria[requestName]={{searchCriteria[requestName]}}&searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"search"
							],
							"query": [
								{
									"key": "searchCriteria[requestName]",
									"value": "{{searchCriteria[requestName]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Make Full Text Search and return found Documents"
					},
					"response": []
				},
				{
					"name": "orders/:id - Loads a specified order",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/orders/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"orders",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Loads a specified order."
					},
					"response": []
				},
				{
					"name": "orders - Returns orders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/orders?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"orders"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Lists orders that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#OrderRepositoryInterface to determine which call to use to get detailed information about all attributes for an object."
					},
					"response": []
				},
				{
					"name": "orders/create - Performs persist operations for a specified order",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/orders/create",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"orders",
								"create"
							]
						},
						"description": "Performs persist operations for a specified order."
					},
					"response": []
				},
				{
					"name": "orders - Performs persist operations for a specified order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/orders/",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"orders",
								""
							]
						},
						"description": "Performs persist operations for a specified order."
					},
					"response": []
				},
				{
					"name": "orders/:id/statuses - Gets the status for a specified order",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/orders/:id/statuses",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"orders",
								":id",
								"statuses"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Gets the status for a specified order."
					},
					"response": []
				},
				{
					"name": "orders/:id/cancel - Cancels a specified order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/orders/:id/cancel",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"orders",
								":id",
								"cancel"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Cancels a specified order."
					},
					"response": []
				},
				{
					"name": "orders/:id/emails - Emails a user a specified order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/orders/:id/emails",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"orders",
								":id",
								"emails"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Emails a user a specified order."
					},
					"response": []
				},
				{
					"name": "orders/:id/hold - Holds a specified order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/orders/:id/hold",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"orders",
								":id",
								"hold"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Holds a specified order."
					},
					"response": []
				},
				{
					"name": "orders/:id/unhold - Releases a specified order from hold status",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/orders/:id/unhold",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"orders",
								":id",
								"unhold"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Releases a specified order from hold status."
					},
					"response": []
				},
				{
					"name": "orders/:id/comments - Lists comments for a specified order",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/orders/:id/comments",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"orders",
								":id",
								"comments"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Lists comments for a specified order."
					},
					"response": []
				},
				{
					"name": "orders/:id/comments - Adds a comment to a specified order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/orders/:id/comments",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"orders",
								":id",
								"comments"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Adds a comment to a specified order."
					},
					"response": []
				},
				{
					"name": "orders/:parent_id - Performs persist operations for a specified order address",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/orders/:parent_id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"orders",
								":parent_id"
							],
							"variable": [
								{
									"key": "parent_id",
									"value": "{{parent_id}}"
								}
							]
						},
						"description": "Performs persist operations for a specified order address."
					},
					"response": []
				},
				{
					"name": "orders/items/:id - Loads a specified order item",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/orders/items/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"orders",
								"items",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Loads a specified order item."
					},
					"response": []
				},
				{
					"name": "orders/items - Returns order items",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/orders/items?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"orders",
								"items"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Lists order items that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#OrderItemRepositoryInterface to determine which call to use to get detailed information about all attributes for an object."
					},
					"response": []
				},
				{
					"name": "invoices/:id - Loads a specified invoice",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/invoices/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"invoices",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Loads a specified invoice."
					},
					"response": []
				},
				{
					"name": "invoices - Returns invoices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/invoices?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"invoices"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Lists invoices that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#InvoiceRepositoryInterface to determine which call to use to get detailed information about all attributes for an object."
					},
					"response": []
				},
				{
					"name": "invoices - Performs persist operations for a specified invoice",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/invoices/",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"invoices",
								""
							]
						},
						"description": "Performs persist operations for a specified invoice."
					},
					"response": []
				},
				{
					"name": "invoices/:id/comments - Lists comments for a specified invoice",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/invoices/:id/comments",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"invoices",
								":id",
								"comments"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Lists comments for a specified invoice."
					},
					"response": []
				},
				{
					"name": "invoices/:id/emails - Emails a user a specified invoice",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/invoices/:id/emails",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"invoices",
								":id",
								"emails"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Emails a user a specified invoice."
					},
					"response": []
				},
				{
					"name": "invoices/:id/void - Voids a specified invoice",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/invoices/:id/void",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"invoices",
								":id",
								"void"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Voids a specified invoice."
					},
					"response": []
				},
				{
					"name": "invoices/:id/capture - Sets invoice capture",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/invoices/:id/capture",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"invoices",
								":id",
								"capture"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Sets invoice capture."
					},
					"response": []
				},
				{
					"name": "invoices/comments - Performs persist operations for a specified invoice comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/invoices/comments",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"invoices",
								"comments"
							]
						},
						"description": "Performs persist operations for a specified invoice comment."
					},
					"response": []
				},
				{
					"name": "invoice/:invoiceId/refund - Create refund for invoice",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/invoice/:invoiceId/refund",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"invoice",
								":invoiceId",
								"refund"
							],
							"variable": [
								{
									"key": "invoiceId",
									"value": "{{invoiceId}}"
								}
							]
						},
						"description": "Create refund for invoice"
					},
					"response": []
				},
				{
					"name": "creditmemo/:id/comments - Lists comments for a specified credit memo",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/creditmemo/:id/comments",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"creditmemo",
								":id",
								"comments"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Lists comments for a specified credit memo."
					},
					"response": []
				},
				{
					"name": "creditmemo/:id/comments - Performs persist operations for a specified entity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/creditmemo/:id/comments",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"creditmemo",
								":id",
								"comments"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Performs persist operations for a specified entity."
					},
					"response": []
				},
				{
					"name": "creditmemo/:id - Loads a specified credit memo",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/creditmemo/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"creditmemo",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Loads a specified credit memo."
					},
					"response": []
				},
				{
					"name": "creditmemo/:id - Cancels a specified credit memo",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/creditmemo/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"creditmemo",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Cancels a specified credit memo."
					},
					"response": []
				},
				{
					"name": "creditmemo/:id/emails - Emails a user a specified credit memo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/creditmemo/:id/emails",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"creditmemo",
								":id",
								"emails"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Emails a user a specified credit memo."
					},
					"response": []
				},
				{
					"name": "creditmemo/refund - Prepare creditmemo to refund and save it",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/creditmemo/refund",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"creditmemo",
								"refund"
							]
						},
						"description": "Prepare creditmemo to refund and save it."
					},
					"response": []
				},
				{
					"name": "creditmemos - Returns creditmemos",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/creditmemos?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"creditmemos"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Lists credit memos that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#CreditmemoRepositoryInterface to determine which call to use to get detailed information about all attributes for an object."
					},
					"response": []
				},
				{
					"name": "creditmemo - Performs persist operations for a specified credit memo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/creditmemo",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"creditmemo"
							]
						},
						"description": "Performs persist operations for a specified credit memo."
					},
					"response": []
				},
				{
					"name": "order/:orderId/refund - Create offline refund for order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/order/:orderId/refund",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"order",
								":orderId",
								"refund"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{orderId}}"
								}
							]
						},
						"description": "Create offline refund for order"
					},
					"response": []
				},
				{
					"name": "shipment/:id - Loads a specified shipment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/shipment/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"shipment",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Loads a specified shipment."
					},
					"response": []
				},
				{
					"name": "shipments - Returns shipments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/shipments?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"shipments"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Lists shipments that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#ShipmentRepositoryInterface to determine which call to use to get detailed information about all attributes for an object."
					},
					"response": []
				},
				{
					"name": "shipment - Performs persist operations for a specified shipment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/shipment/",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"shipment",
								""
							]
						},
						"description": "Performs persist operations for a specified shipment."
					},
					"response": []
				},
				{
					"name": "shipment/:id/comments - Lists comments for a specified shipment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/shipment/:id/comments",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"shipment",
								":id",
								"comments"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Lists comments for a specified shipment."
					},
					"response": []
				},
				{
					"name": "shipment/:id/comments - Performs persist operations for a specified shipment comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/shipment/:id/comments",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"shipment",
								":id",
								"comments"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Performs persist operations for a specified shipment comment."
					},
					"response": []
				},
				{
					"name": "shipment/:id/emails - Emails user a specified shipment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/shipment/:id/emails",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"shipment",
								":id",
								"emails"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Emails user a specified shipment."
					},
					"response": []
				},
				{
					"name": "shipment/:id/label - Gets a specified shipment label",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/shipment/:id/label",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"shipment",
								":id",
								"label"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Gets a specified shipment label."
					},
					"response": []
				},
				{
					"name": "shipment/track - Performs persist operations for a specified shipment track",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/shipment/track",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"shipment",
								"track"
							]
						},
						"description": "Performs persist operations for a specified shipment track."
					},
					"response": []
				},
				{
					"name": "shipment/track/:id - Deletes a specified shipment track by ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/shipment/track/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"shipment",
								"track",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Deletes a specified shipment track by ID."
					},
					"response": []
				},
				{
					"name": "order/:orderId/ship - Creates new Shipment for given Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/order/:orderId/ship",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"order",
								":orderId",
								"ship"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{orderId}}"
								}
							]
						},
						"description": "Creates new Shipment for given Order."
					},
					"response": []
				},
				{
					"name": "transactions/:id - Loads a specified transaction",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/transactions/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"transactions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Loads a specified transaction."
					},
					"response": []
				},
				{
					"name": "transactions - Returns transactions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/transactions?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"transactions"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Lists transactions that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#TransactionRepositoryInterface to determine which call to use to get detailed information about all attributes for an object."
					},
					"response": []
				},
				{
					"name": "order/:orderId/invoice - Posts an invoice for a specified order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/order/:orderId/invoice",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"order",
								":orderId",
								"invoice"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "{{orderId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "carts/:cartId/shipping-information - Updates shipping information for a specified cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/shipping-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"shipping-information"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "carts/:cartId/totals-information - Calculate quote totals based on address and shipping method",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/totals-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"totals-information"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Calculate quote totals based on address and shipping method."
					},
					"response": []
				},
				{
					"name": "salesRules/:ruleId - Get rule by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/salesRules/:ruleId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"salesRules",
								":ruleId"
							],
							"variable": [
								{
									"key": "ruleId",
									"value": "{{ruleId}}"
								}
							]
						},
						"description": "Get rule by ID."
					},
					"response": []
				},
				{
					"name": "salesRules/:ruleId - Save sales rule",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/salesRules/:ruleId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"salesRules",
								":ruleId"
							],
							"variable": [
								{
									"key": "ruleId",
									"value": "{{ruleId}}"
								}
							]
						},
						"description": "Save sales rule."
					},
					"response": []
				},
				{
					"name": "salesRules/:ruleId - Delete rule by ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/salesRules/:ruleId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"salesRules",
								":ruleId"
							],
							"variable": [
								{
									"key": "ruleId",
									"value": "{{ruleId}}"
								}
							]
						},
						"description": "Delete rule by ID."
					},
					"response": []
				},
				{
					"name": "salesRules/search - Searches sales rules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/salesRules/search?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"salesRules",
								"search"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Retrieve sales rules that match te specified criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#RuleRepositoryInterface to determine which call to use to get detailed information about all attributes for an object."
					},
					"response": []
				},
				{
					"name": "salesRules - Save sales rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/salesRules",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"salesRules"
							]
						},
						"description": "Save sales rule."
					},
					"response": []
				},
				{
					"name": "coupons/:couponId - Get coupon by coupon id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/coupons/:couponId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"coupons",
								":couponId"
							],
							"variable": [
								{
									"key": "couponId",
									"value": "{{couponId}}"
								}
							]
						},
						"description": "Get coupon by coupon id."
					},
					"response": []
				},
				{
					"name": "coupons/:couponId - Save a coupon",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/coupons/:couponId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"coupons",
								":couponId"
							],
							"variable": [
								{
									"key": "couponId",
									"value": "{{couponId}}"
								}
							]
						},
						"description": "Save a coupon."
					},
					"response": []
				},
				{
					"name": "coupons/:couponId - Delete coupon by coupon id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/coupons/:couponId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"coupons",
								":couponId"
							],
							"variable": [
								{
									"key": "couponId",
									"value": "{{couponId}}"
								}
							]
						},
						"description": "Delete coupon by coupon id."
					},
					"response": []
				},
				{
					"name": "coupons/search - Searches coupons",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/coupons/search?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"coupons",
								"search"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Retrieve a coupon using the specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#CouponRepositoryInterface to determine which call to use to get detailed information about all attributes for an object."
					},
					"response": []
				},
				{
					"name": "coupons - Save a coupon",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/coupons",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"coupons"
							]
						},
						"description": "Save a coupon."
					},
					"response": []
				},
				{
					"name": "coupons/generate - Generate coupon for a rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/coupons/generate",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"coupons",
								"generate"
							]
						},
						"description": "Generate coupon for a rule"
					},
					"response": []
				},
				{
					"name": "coupons/deleteByIds - Delete coupon by coupon ids",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/coupons/deleteByIds",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"coupons",
								"deleteByIds"
							]
						},
						"description": "Delete coupon by coupon ids."
					},
					"response": []
				},
				{
					"name": "coupons/deleteByCodes - Delete coupon by coupon codes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/coupons/deleteByCodes",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"coupons",
								"deleteByCodes"
							]
						},
						"description": "Delete coupon by coupon codes."
					},
					"response": []
				},
				{
					"name": "configurable-products/:sku/children - Get all children for Configurable product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/configurable-products/:sku/children",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"configurable-products",
								":sku",
								"children"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						},
						"description": "Get all children for Configurable product"
					},
					"response": []
				},
				{
					"name": "configurable-products/:sku/children/:childSku - Remove configurable product option",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/configurable-products/:sku/children/:childSku",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"configurable-products",
								":sku",
								"children",
								":childSku"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "childSku",
									"value": "{{childSku}}"
								}
							]
						},
						"description": "Remove configurable product option"
					},
					"response": []
				},
				{
					"name": "configurable-products/:sku/child - Updates configurable-products",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/configurable-products/:sku/child",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"configurable-products",
								":sku",
								"child"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "configurable-products/variation - Generate variation based on same product",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/configurable-products/variation",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"configurable-products",
								"variation"
							]
						},
						"description": "Generate variation based on same product"
					},
					"response": []
				},
				{
					"name": "configurable-products/:sku/options/:id - Get option for configurable product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/configurable-products/:sku/options/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"configurable-products",
								":sku",
								"options",
								":id"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get option for configurable product"
					},
					"response": []
				},
				{
					"name": "configurable-products/:sku/options/:id - Save option",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/configurable-products/:sku/options/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"configurable-products",
								":sku",
								"options",
								":id"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Save option"
					},
					"response": []
				},
				{
					"name": "configurable-products/:sku/options/:id - Remove option from configurable product",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/configurable-products/:sku/options/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"configurable-products",
								":sku",
								"options",
								":id"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Remove option from configurable product"
					},
					"response": []
				},
				{
					"name": "configurable-products/:sku/options/all - Get all options for configurable product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/configurable-products/:sku/options/all",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"configurable-products",
								":sku",
								"options",
								"all"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						},
						"description": "Get all options for configurable product"
					},
					"response": []
				},
				{
					"name": "configurable-products/:sku/options - Save option",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/configurable-products/:sku/options",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"configurable-products",
								":sku",
								"options"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						},
						"description": "Save option"
					},
					"response": []
				},
				{
					"name": "products/:sku/downloadable-links - List of links with associated samples",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/downloadable-links",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"downloadable-links"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						},
						"description": "List of links with associated samples"
					},
					"response": []
				},
				{
					"name": "products/:sku/downloadable-links - Update downloadable link of the given product (link type and its resources cannot be changed)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/downloadable-links",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"downloadable-links"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						},
						"description": "Update downloadable link of the given product (link type and its resources cannot be changed)"
					},
					"response": []
				},
				{
					"name": "products/:sku/downloadable-links/:id - Update downloadable link of the given product (link type and its resources cannot be changed)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/downloadable-links/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"downloadable-links",
								":id"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update downloadable link of the given product (link type and its resources cannot be changed)"
					},
					"response": []
				},
				{
					"name": "products/downloadable-links/:id - Delete downloadable link",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/downloadable-links/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"downloadable-links",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete downloadable link"
					},
					"response": []
				},
				{
					"name": "products/:sku/downloadable-links/samples - List of samples for downloadable product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/downloadable-links/samples",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"downloadable-links",
								"samples"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						},
						"description": "List of samples for downloadable product"
					},
					"response": []
				},
				{
					"name": "products/:sku/downloadable-links/samples - Update downloadable sample of the given product",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/downloadable-links/samples",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"downloadable-links",
								"samples"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								}
							]
						},
						"description": "Update downloadable sample of the given product"
					},
					"response": []
				},
				{
					"name": "products/:sku/downloadable-links/samples/:id - Update downloadable sample of the given product",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/:sku/downloadable-links/samples/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								":sku",
								"downloadable-links",
								"samples",
								":id"
							],
							"variable": [
								{
									"key": "sku",
									"value": "{{sku}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update downloadable sample of the given product"
					},
					"response": []
				},
				{
					"name": "products/downloadable-links/samples/:id - Delete downloadable sample",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/products/downloadable-links/samples/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"products",
								"downloadable-links",
								"samples",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete downloadable sample"
					},
					"response": []
				},
				{
					"name": "carts/licence - Lists active checkout agreements",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/licence",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								"licence"
							]
						},
						"description": "Lists active checkout agreements."
					},
					"response": []
				},
				{
					"name": "taxRates - Create or update tax rate",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/taxRates",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"taxRates"
							]
						},
						"description": "Create or update tax rate"
					},
					"response": []
				},
				{
					"name": "taxRates - Create or update tax rate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/taxRates",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"taxRates"
							]
						},
						"description": "Create or update tax rate"
					},
					"response": []
				},
				{
					"name": "taxRates/:rateId - Get tax rate",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/taxRates/:rateId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"taxRates",
								":rateId"
							],
							"variable": [
								{
									"key": "rateId",
									"value": "{{rateId}}"
								}
							]
						},
						"description": "Get tax rate"
					},
					"response": []
				},
				{
					"name": "taxRates/:rateId - Delete tax rate",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/taxRates/:rateId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"taxRates",
								":rateId"
							],
							"variable": [
								{
									"key": "rateId",
									"value": "{{rateId}}"
								}
							]
						},
						"description": "Delete tax rate"
					},
					"response": []
				},
				{
					"name": "taxRates/search - Searches tax rates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/taxRates/search?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"taxRates",
								"search"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Search TaxRates This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#TaxRateRepositoryInterface to determine which call to use to get detailed information about all attributes for an object."
					},
					"response": []
				},
				{
					"name": "taxRules - Save TaxRule",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/taxRules",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"taxRules"
							]
						},
						"description": "Save TaxRule"
					},
					"response": []
				},
				{
					"name": "taxRules - Save TaxRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/taxRules",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"taxRules"
							]
						},
						"description": "Save TaxRule"
					},
					"response": []
				},
				{
					"name": "taxRules/:ruleId - Get TaxRule",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/taxRules/:ruleId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"taxRules",
								":ruleId"
							],
							"variable": [
								{
									"key": "ruleId",
									"value": "{{ruleId}}"
								}
							]
						},
						"description": "Get TaxRule"
					},
					"response": []
				},
				{
					"name": "taxRules/:ruleId - Delete TaxRule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/taxRules/:ruleId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"taxRules",
								":ruleId"
							],
							"variable": [
								{
									"key": "ruleId",
									"value": "{{ruleId}}"
								}
							]
						},
						"description": "Delete TaxRule"
					},
					"response": []
				},
				{
					"name": "taxRules/search - Searches tax rules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/taxRules/search?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"taxRules",
								"search"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Search TaxRules This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#TaxRuleRepositoryInterface to determine which call to use to get detailed information about all attributes for an object."
					},
					"response": []
				},
				{
					"name": "taxClasses - Create a Tax Class",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/taxClasses",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"taxClasses"
							]
						},
						"description": "Create a Tax Class"
					},
					"response": []
				},
				{
					"name": "taxClasses/:taxClassId - Get a tax class with the given tax class id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/taxClasses/:taxClassId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"taxClasses",
								":taxClassId"
							],
							"variable": [
								{
									"key": "taxClassId",
									"value": "{{taxClassId}}"
								}
							]
						},
						"description": "Get a tax class with the given tax class id."
					},
					"response": []
				},
				{
					"name": "taxClasses/:taxClassId - Delete a tax class with the given tax class id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/taxClasses/:taxClassId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"taxClasses",
								":taxClassId"
							],
							"variable": [
								{
									"key": "taxClassId",
									"value": "{{taxClassId}}"
								}
							]
						},
						"description": "Delete a tax class with the given tax class id."
					},
					"response": []
				},
				{
					"name": "taxClasses/:classId - Create a Tax Class",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/taxClasses/:classId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"taxClasses",
								":classId"
							],
							"variable": [
								{
									"key": "classId",
									"value": "{{classId}}"
								}
							]
						},
						"description": "Create a Tax Class"
					},
					"response": []
				},
				{
					"name": "taxClasses/search - Searches tax classes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/taxClasses/search?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"taxClasses",
								"search"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Retrieve tax classes which match a specific criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#TaxClassRepositoryInterface to determine which call to use to get detailed information about all attributes for an object."
					},
					"response": []
				},
				{
					"name": "company - Returns the list of companies. The list is an array of objects, and detailed information about item attributes might not be included",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/company/?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"company",
								""
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Returns the list of companies. The list is an array of objects, and detailed information about item attributes might not be included."
					},
					"response": []
				},
				{
					"name": "company - Create or update a company account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/company/",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"company",
								""
							]
						},
						"description": "Create or update a company account."
					},
					"response": []
				},
				{
					"name": "company/:companyId - Returns company details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/company/:companyId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"company",
								":companyId"
							],
							"variable": [
								{
									"key": "companyId",
									"value": "{{companyId}}"
								}
							]
						},
						"description": "Returns company details."
					},
					"response": []
				},
				{
					"name": "company/:companyId - Create or update a company account",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/company/:companyId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"company",
								":companyId"
							],
							"variable": [
								{
									"key": "companyId",
									"value": "{{companyId}}"
								}
							]
						},
						"description": "Create or update a company account."
					},
					"response": []
				},
				{
					"name": "company/:companyId - Delete a company. Customers belonging to a company are not deleted with this request",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/company/:companyId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"company",
								":companyId"
							],
							"variable": [
								{
									"key": "companyId",
									"value": "{{companyId}}"
								}
							]
						},
						"description": "Delete a company. Customers belonging to a company are not deleted with this request."
					},
					"response": []
				},
				{
					"name": "team - Returns the list of teams for the specified search criteria (team name or description)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/team/?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"team",
								""
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Returns the list of teams for the specified search criteria (team name or description)."
					},
					"response": []
				},
				{
					"name": "team/:teamId - Returns data for a team in the company, by entity id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/team/:teamId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"team",
								":teamId"
							],
							"variable": [
								{
									"key": "teamId",
									"value": "{{teamId}}"
								}
							]
						},
						"description": "Returns data for a team in the company, by entity id."
					},
					"response": []
				},
				{
					"name": "team/:teamId - Update a team in the company structure",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/team/:teamId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"team",
								":teamId"
							],
							"variable": [
								{
									"key": "teamId",
									"value": "{{teamId}}"
								}
							]
						},
						"description": "Update a team in the company structure."
					},
					"response": []
				},
				{
					"name": "team/:teamId - Delete a team from the company structure",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/team/:teamId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"team",
								":teamId"
							],
							"variable": [
								{
									"key": "teamId",
									"value": "{{teamId}}"
								}
							]
						},
						"description": "Delete a team from the company structure."
					},
					"response": []
				},
				{
					"name": "team/:companyId - Create a team in the company structure",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/team/:companyId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"team",
								":companyId"
							],
							"variable": [
								{
									"key": "companyId",
									"value": "{{companyId}}"
								}
							]
						},
						"description": "Create a team in the company structure."
					},
					"response": []
				},
				{
					"name": "hierarchy/:id - Returns the list of teams and company users in the company structure",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/hierarchy/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"hierarchy",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Returns the list of teams and company users in the company structure."
					},
					"response": []
				},
				{
					"name": "hierarchy/move/:id - Moves teams and users within the company structure",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/hierarchy/move/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"hierarchy",
								"move",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Moves teams and users within the company structure."
					},
					"response": []
				},
				{
					"name": "company/role - Returns the list of roles and permissions for a specified company",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/company/role/?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"company",
								"role",
								""
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Returns the list of roles and permissions for a specified company."
					},
					"response": []
				},
				{
					"name": "company/role - Create or update a role for a selected company",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/company/role/",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"company",
								"role",
								""
							]
						},
						"description": "Create or update a role for a selected company."
					},
					"response": []
				},
				{
					"name": "company/role/:roleId - Returns the list of permissions for a specified role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/company/role/:roleId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"company",
								"role",
								":roleId"
							],
							"variable": [
								{
									"key": "roleId",
									"value": "{{roleId}}"
								}
							]
						},
						"description": "Returns the list of permissions for a specified role."
					},
					"response": []
				},
				{
					"name": "company/role/:roleId - Delete a role",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/company/role/:roleId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"company",
								"role",
								":roleId"
							],
							"variable": [
								{
									"key": "roleId",
									"value": "{{roleId}}"
								}
							]
						},
						"description": "Delete a role."
					},
					"response": []
				},
				{
					"name": "company/role/:id - Create or update a role for a selected company",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/company/role/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"company",
								"role",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create or update a role for a selected company."
					},
					"response": []
				},
				{
					"name": "company/assignRoles - Change a role for a company user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/company/assignRoles",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"company",
								"assignRoles"
							]
						},
						"description": "Change a role for a company user."
					},
					"response": []
				},
				{
					"name": "company/role/:roleId/users - View the list of company users assigned to a specified role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/company/role/:roleId/users",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"company",
								"role",
								":roleId",
								"users"
							],
							"variable": [
								{
									"key": "roleId",
									"value": "{{roleId}}"
								}
							]
						},
						"description": "View the list of company users assigned to a specified role."
					},
					"response": []
				},
				{
					"name": "integration/admin/token - Create access token for admin given the admin credentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/integration/admin/token",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"integration",
								"admin",
								"token"
							]
						},
						"description": "Create access token for admin given the admin credentials."
					},
					"response": []
				},
				{
					"name": "analytics/link - Returns analytics link",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/analytics/link",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"analytics",
								"link"
							]
						}
					},
					"response": []
				},
				{
					"name": "negotiableQuote/request - Updates negotiable quote",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiableQuote/request",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiableQuote",
								"request"
							]
						},
						"description": "Create a B2B quote based on a regular Magento quote. If the B2B quote requires a shipping address (for negotiation or tax calculations), add it to the regular quote before you create a B2B quote."
					},
					"response": []
				},
				{
					"name": "negotiableQuote/submitToCustomer - Submit the B2B quote to the customer. The quote status for the customer will be changed to 'Updated', and the customer can work with the quote",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiableQuote/submitToCustomer",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiableQuote",
								"submitToCustomer"
							]
						},
						"description": "Submit the B2B quote to the customer. The quote status for the customer will be changed to 'Updated', and the customer can work with the quote."
					},
					"response": []
				},
				{
					"name": "negotiableQuote/decline - Decline the B2B quote. All custom pricing will be removed from this quote. The buyer will be able to place an order using their standard catalog prices and discounts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiableQuote/decline",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiableQuote",
								"decline"
							]
						},
						"description": "Decline the B2B quote. All custom pricing will be removed from this quote. The buyer will be able to place an order using their standard catalog prices and discounts."
					},
					"response": []
				},
				{
					"name": "negotiableQuote/pricesUpdated - Update prices",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiableQuote/pricesUpdated",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiableQuote",
								"pricesUpdated"
							]
						},
						"description": "Refreshes item prices, taxes, discounts, cart rules in the negotiable quote as per the latest changes in the catalog / shared catalog and in the price rules. Depending on the negotiable quote state and totals, all or just some of quote numbers will be recalculated. 'Update Prices' parameter forces refresh on any quote that is not locked for admin user, including the quotes with a negotiated price. The request can be applied to one or more quotes at the same time."
					},
					"response": []
				},
				{
					"name": "negotiableQuote/attachmentContent - Returns content for one or more files attached on the quote comment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiableQuote/attachmentContent?attachmentIds={{attachmentIds}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiableQuote",
								"attachmentContent"
							],
							"query": [
								{
									"key": "attachmentIds",
									"value": "{{attachmentIds}}"
								}
							]
						},
						"description": "Returns content for one or more files attached on the quote comment."
					},
					"response": []
				},
				{
					"name": "negotiableQuote/:quoteId/comments - Returns comments for a specified negotiable quote",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiableQuote/:quoteId/comments",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiableQuote",
								":quoteId",
								"comments"
							],
							"variable": [
								{
									"key": "quoteId",
									"value": "{{quoteId}}"
								}
							]
						},
						"description": "Returns comments for a specified negotiable quote."
					},
					"response": []
				},
				{
					"name": "negotiableQuote/:quoteId/shippingMethod - Updates the shipping method on a negotiable quote",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiableQuote/:quoteId/shippingMethod",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiableQuote",
								":quoteId",
								"shippingMethod"
							],
							"variable": [
								{
									"key": "quoteId",
									"value": "{{quoteId}}"
								}
							]
						},
						"description": "Updates the shipping method on a negotiable quote."
					},
					"response": []
				},
				{
					"name": "negotiable-carts/:cartId/payment-information - Get payment information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiable-carts/:cartId/payment-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiable-carts",
								":cartId",
								"payment-information"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Get payment information"
					},
					"response": []
				},
				{
					"name": "negotiable-carts/:cartId/payment-information - Set payment information and place order for a specified cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiable-carts/:cartId/payment-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiable-carts",
								":cartId",
								"payment-information"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Set payment information and place order for a specified cart."
					},
					"response": []
				},
				{
					"name": "negotiable-carts/:cartId/set-payment-information - Set payment information for a specified cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiable-carts/:cartId/set-payment-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiable-carts",
								":cartId",
								"set-payment-information"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Set payment information for a specified cart."
					},
					"response": []
				},
				{
					"name": "negotiable-carts/:cartId/shipping-information - Set shipping information for a specified cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiable-carts/:cartId/shipping-information",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiable-carts",
								":cartId",
								"shipping-information"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "negotiable-carts/:cartId/estimate-shipping-methods - Estimate shipping by address and return list of available shipping methods",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiable-carts/:cartId/estimate-shipping-methods",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiable-carts",
								":cartId",
								"estimate-shipping-methods"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Estimate shipping by address and return list of available shipping methods"
					},
					"response": []
				},
				{
					"name": "negotiable-carts/:cartId/estimate-shipping-methods-by-address-id - Estimate shipping",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiable-carts/:cartId/estimate-shipping-methods-by-address-id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiable-carts",
								":cartId",
								"estimate-shipping-methods-by-address-id"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Estimate shipping"
					},
					"response": []
				},
				{
					"name": "negotiableQuote/:quoteId - Save quote",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiableQuote/:quoteId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiableQuote",
								":quoteId"
							],
							"variable": [
								{
									"key": "quoteId",
									"value": "{{quoteId}}"
								}
							]
						},
						"description": "Save quote"
					},
					"response": []
				},
				{
					"name": "negotiable-carts/:cartId/billing-address - Returns the billing address for a specified quote",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiable-carts/:cartId/billing-address",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiable-carts",
								":cartId",
								"billing-address"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Returns the billing address for a specified quote."
					},
					"response": []
				},
				{
					"name": "negotiable-carts/:cartId/billing-address - Assigns a specified billing address to a specified cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiable-carts/:cartId/billing-address",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiable-carts",
								":cartId",
								"billing-address"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Assigns a specified billing address to a specified cart."
					},
					"response": []
				},
				{
					"name": "negotiable-carts/:cartId/totals - Returns quote totals data for a specified cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiable-carts/:cartId/totals",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiable-carts",
								":cartId",
								"totals"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Returns quote totals data for a specified cart."
					},
					"response": []
				},
				{
					"name": "negotiable-carts/:cartId/coupons/:couponCode - Adds a coupon by code to a specified cart",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiable-carts/:cartId/coupons/:couponCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiable-carts",
								":cartId",
								"coupons",
								":couponCode"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								},
								{
									"key": "couponCode",
									"value": "{{couponCode}}"
								}
							]
						},
						"description": "Adds a coupon by code to a specified cart."
					},
					"response": []
				},
				{
					"name": "negotiable-carts/:cartId/coupons - Deletes a coupon from a specified cart",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiable-carts/:cartId/coupons",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiable-carts",
								":cartId",
								"coupons"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Deletes a coupon from a specified cart."
					},
					"response": []
				},
				{
					"name": "negotiable-carts/:cartId/giftCards - Updates cart gift cards",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiable-carts/:cartId/giftCards",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiable-carts",
								":cartId",
								"giftCards"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "negotiable-carts/:cartId/giftCards/:giftCardCode - Remove GiftCard Account entity",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/negotiable-carts/:cartId/giftCards/:giftCardCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"negotiable-carts",
								":cartId",
								"giftCards",
								":giftCardCode"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								},
								{
									"key": "giftCardCode",
									"value": "{{giftCardCode}}"
								}
							]
						},
						"description": "Remove GiftCard Account entity"
					},
					"response": []
				},
				{
					"name": "sharedCatalog/:sharedCatalogId - Return the following properties for the selected shared catalog: ID, Store Group ID, Name, Type, Description, Customer Group, Tax Class",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/sharedCatalog/:sharedCatalogId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"sharedCatalog",
								":sharedCatalogId"
							],
							"variable": [
								{
									"key": "sharedCatalogId",
									"value": "{{sharedCatalogId}}"
								}
							]
						},
						"description": "Return the following properties for the selected shared catalog: ID, Store Group ID, Name, Type, Description, Customer Group, Tax Class."
					},
					"response": []
				},
				{
					"name": "sharedCatalog/:sharedCatalogId - Delete a shared catalog by ID",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/sharedCatalog/:sharedCatalogId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"sharedCatalog",
								":sharedCatalogId"
							],
							"variable": [
								{
									"key": "sharedCatalogId",
									"value": "{{sharedCatalogId}}"
								}
							]
						},
						"description": "Delete a shared catalog by ID."
					},
					"response": []
				},
				{
					"name": "sharedCatalog - Create or update Shared Catalog service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/sharedCatalog",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"sharedCatalog"
							]
						},
						"description": "Create or update Shared Catalog service."
					},
					"response": []
				},
				{
					"name": "sharedCatalog/:id - Create or update Shared Catalog service",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/sharedCatalog/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"sharedCatalog",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create or update Shared Catalog service."
					},
					"response": []
				},
				{
					"name": "sharedCatalog - Return the list of shared catalogs and basic properties for each catalog",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/sharedCatalog/?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"sharedCatalog",
								""
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Return the list of shared catalogs and basic properties for each catalog."
					},
					"response": []
				},
				{
					"name": "sharedCatalog/:sharedCatalogId/companies - Return the list of company IDs for the companies assigned to the selected catalog",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/sharedCatalog/:sharedCatalogId/companies",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"sharedCatalog",
								":sharedCatalogId",
								"companies"
							],
							"variable": [
								{
									"key": "sharedCatalogId",
									"value": "{{sharedCatalogId}}"
								}
							]
						},
						"description": "Return the list of company IDs for the companies assigned to the selected catalog."
					},
					"response": []
				},
				{
					"name": "sharedCatalog/:sharedCatalogId/assignCompanies - Assign companies to a shared catalog",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/sharedCatalog/:sharedCatalogId/assignCompanies",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"sharedCatalog",
								":sharedCatalogId",
								"assignCompanies"
							],
							"variable": [
								{
									"key": "sharedCatalogId",
									"value": "{{sharedCatalogId}}"
								}
							]
						},
						"description": "Assign companies to a shared catalog."
					},
					"response": []
				},
				{
					"name": "sharedCatalog/:sharedCatalogId/unassignCompanies - Unassign companies from a shared catalog",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/sharedCatalog/:sharedCatalogId/unassignCompanies",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"sharedCatalog",
								":sharedCatalogId",
								"unassignCompanies"
							],
							"variable": [
								{
									"key": "sharedCatalogId",
									"value": "{{sharedCatalogId}}"
								}
							]
						},
						"description": "Unassign companies from a shared catalog."
					},
					"response": []
				},
				{
					"name": "sharedCatalog/:id/products - Return the list of product SKUs in the selected shared catalog",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/sharedCatalog/:id/products",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"sharedCatalog",
								":id",
								"products"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Return the list of product SKUs in the selected shared catalog."
					},
					"response": []
				},
				{
					"name": "sharedCatalog/:id/assignProducts - Add products into the shared catalog",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/sharedCatalog/:id/assignProducts",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"sharedCatalog",
								":id",
								"assignProducts"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Add products into the shared catalog."
					},
					"response": []
				},
				{
					"name": "sharedCatalog/:id/unassignProducts - Remove the specified products from the shared catalog",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/sharedCatalog/:id/unassignProducts",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"sharedCatalog",
								":id",
								"unassignProducts"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Remove the specified products from the shared catalog."
					},
					"response": []
				},
				{
					"name": "sharedCatalog/:id/categories - Return the list of categories in the selected shared catalog",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/sharedCatalog/:id/categories",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"sharedCatalog",
								":id",
								"categories"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Return the list of categories in the selected shared catalog."
					},
					"response": []
				},
				{
					"name": "sharedCatalog/:id/assignCategories - Add categories into the shared catalog",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/sharedCatalog/:id/assignCategories",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"sharedCatalog",
								":id",
								"assignCategories"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Add categories into the shared catalog."
					},
					"response": []
				},
				{
					"name": "sharedCatalog/:id/unassignCategories - Remove the specified categories from the shared catalog",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/sharedCatalog/:id/unassignCategories",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"sharedCatalog",
								":id",
								"unassignCategories"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Remove the specified categories from the shared catalog."
					},
					"response": []
				},
				{
					"name": "carts/:quoteId/giftCards - Return GiftCard Account cards",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:quoteId/giftCards",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":quoteId",
								"giftCards"
							],
							"variable": [
								{
									"key": "quoteId",
									"value": "{{quoteId}}"
								}
							]
						},
						"description": "Return GiftCard Account cards"
					},
					"response": []
				},
				{
					"name": "carts/:cartId/giftCards - Update Gift cards",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/giftCards",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"giftCards"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "carts/:cartId/giftCards/:giftCardCode - Remove GiftCard Account entity",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/giftCards/:giftCardCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"giftCards",
								":giftCardCode"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								},
								{
									"key": "giftCardCode",
									"value": "{{giftCardCode}}"
								}
							]
						},
						"description": "Remove GiftCard Account entity"
					},
					"response": []
				},
				{
					"name": "carts/:cartId/gift-message - Return the gift message for a specified order",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/gift-message",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"gift-message"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Return the gift message for a specified order."
					},
					"response": []
				},
				{
					"name": "carts/:cartId/gift-message - Set the gift message for an entire order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/gift-message",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"gift-message"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								}
							]
						},
						"description": "Set the gift message for an entire order."
					},
					"response": []
				},
				{
					"name": "carts/:cartId/gift-message/:itemId - Return the gift message for a specified item in a specified shopping cart",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/gift-message/:itemId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"gift-message",
								":itemId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								},
								{
									"key": "itemId",
									"value": "{{itemId}}"
								}
							]
						},
						"description": "Return the gift message for a specified item in a specified shopping cart."
					},
					"response": []
				},
				{
					"name": "carts/:cartId/gift-message/:itemId - Set the gift message for a specified item in a specified shopping cart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/carts/:cartId/gift-message/:itemId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"carts",
								":cartId",
								"gift-message",
								":itemId"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{cartId}}"
								},
								{
									"key": "itemId",
									"value": "{{itemId}}"
								}
							]
						},
						"description": "Set the gift message for a specified item in a specified shopping cart."
					},
					"response": []
				},
				{
					"name": "gift-wrappings/:id - Return data object for specified wrapping ID and store",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/gift-wrappings/:id?storeId={{storeId}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"gift-wrappings",
								":id"
							],
							"query": [
								{
									"key": "storeId",
									"value": "{{storeId}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Return data object for specified wrapping ID and store."
					},
					"response": []
				},
				{
					"name": "gift-wrappings/:id - Delete gift wrapping",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/gift-wrappings/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"gift-wrappings",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete gift wrapping"
					},
					"response": []
				},
				{
					"name": "gift-wrappings - Return list of gift wrapping data objects based on search criteria",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/gift-wrappings?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"gift-wrappings"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Return list of gift wrapping data objects based on search criteria"
					},
					"response": []
				},
				{
					"name": "gift-wrappings - Create/Update new gift wrapping with data object values",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/gift-wrappings",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"gift-wrappings"
							]
						},
						"description": "Create/Update new gift wrapping with data object values"
					},
					"response": []
				},
				{
					"name": "gift-wrappings/:wrappingId - Create/Update new gift wrapping with data object values",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/gift-wrappings/:wrappingId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"gift-wrappings",
								":wrappingId"
							],
							"variable": [
								{
									"key": "wrappingId",
									"value": "{{wrappingId}}"
								}
							]
						},
						"description": "Create/Update new gift wrapping with data object values"
					},
					"response": []
				},
				{
					"name": "returns/:id/tracking-numbers - Get track list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/returns/:id/tracking-numbers",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"returns",
								":id",
								"tracking-numbers"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get track list"
					},
					"response": []
				},
				{
					"name": "returns/:id/tracking-numbers - Add track",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/returns/:id/tracking-numbers",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"returns",
								":id",
								"tracking-numbers"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Add track"
					},
					"response": []
				},
				{
					"name": "returns/:id/tracking-numbers/:trackId - Remove track by id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/returns/:id/tracking-numbers/:trackId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"returns",
								":id",
								"tracking-numbers",
								":trackId"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								},
								{
									"key": "trackId",
									"value": "{{trackId}}"
								}
							]
						},
						"description": "Remove track by id"
					},
					"response": []
				},
				{
					"name": "returns/:id/labels - Get shipping label int the PDF format",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/returns/:id/labels",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"returns",
								":id",
								"labels"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get shipping label int the PDF format"
					},
					"response": []
				},
				{
					"name": "returns/:id - Return data object for specified RMA id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/returns/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"returns",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Return data object for specified RMA id"
					},
					"response": []
				},
				{
					"name": "returns/:id - Save RMA",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/returns/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"returns",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Save RMA"
					},
					"response": []
				},
				{
					"name": "returns/:id - Delete RMA",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/returns/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"returns",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete RMA"
					},
					"response": []
				},
				{
					"name": "returns/:id/comments - Comments list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/returns/:id/comments",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"returns",
								":id",
								"comments"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Comments list"
					},
					"response": []
				},
				{
					"name": "returns/:id/comments - Add comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/returns/:id/comments",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"returns",
								":id",
								"comments"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Add comment"
					},
					"response": []
				},
				{
					"name": "returns - Return list of rma data objects based on search criteria",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/returns?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"returns"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Return list of rma data objects based on search criteria"
					},
					"response": []
				},
				{
					"name": "returns - Save RMA",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/returns",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"returns"
							]
						},
						"description": "Save RMA"
					},
					"response": []
				},
				{
					"name": "returnsAttributeMetadata/:attributeCode - Retrieve attribute metadata",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/returnsAttributeMetadata/:attributeCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"returnsAttributeMetadata",
								":attributeCode"
							],
							"variable": [
								{
									"key": "attributeCode",
									"value": "{{attributeCode}}"
								}
							]
						},
						"description": "Retrieve attribute metadata."
					},
					"response": []
				},
				{
					"name": "returnsAttributeMetadata/form/:formCode - Retrieve all attributes filtered by form code",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/returnsAttributeMetadata/form/:formCode",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"returnsAttributeMetadata",
								"form",
								":formCode"
							],
							"variable": [
								{
									"key": "formCode",
									"value": "{{formCode}}"
								}
							]
						},
						"description": "Retrieve all attributes filtered by form code"
					},
					"response": []
				},
				{
					"name": "returnsAttributeMetadata - Get all attribute metadata",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/returnsAttributeMetadata",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"returnsAttributeMetadata"
							]
						},
						"description": "Get all attribute metadata."
					},
					"response": []
				},
				{
					"name": "returnsAttributeMetadata/custom - Get custom attribute metadata for the given Data object's attribute set",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/returnsAttributeMetadata/custom?dataObjectClassName={{dataObjectClassName}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"returnsAttributeMetadata",
								"custom"
							],
							"query": [
								{
									"key": "dataObjectClassName",
									"value": "{{dataObjectClassName}}"
								}
							]
						},
						"description": "Get custom attribute metadata for the given Data object's attribute set"
					},
					"response": []
				},
				{
					"name": "companyCredits - Returns the list of credits for specified companies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/companyCredits/?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"companyCredits",
								""
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Returns the list of credits for specified companies."
					},
					"response": []
				},
				{
					"name": "companyCredits/:creditId - Returns data on the credit limit for a specified credit limit ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/companyCredits/:creditId?reload={{reload}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"companyCredits",
								":creditId"
							],
							"query": [
								{
									"key": "reload",
									"value": "{{reload}}"
								}
							],
							"variable": [
								{
									"key": "creditId",
									"value": "{{creditId}}"
								}
							]
						},
						"description": "Returns data on the credit limit for a specified credit limit ID."
					},
					"response": []
				},
				{
					"name": "companyCredits/:id - Update the following company credit attributes: credit currency, credit limit and setting to exceed credit",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/companyCredits/:id",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"companyCredits",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update the following company credit attributes: credit currency, credit limit and setting to exceed credit."
					},
					"response": []
				},
				{
					"name": "companyCredits/company/:companyId - Returns data on the credit limit for a specified company",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/companyCredits/company/:companyId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"companyCredits",
								"company",
								":companyId"
							],
							"variable": [
								{
									"key": "companyId",
									"value": "{{companyId}}"
								}
							]
						},
						"description": "Returns data on the credit limit for a specified company."
					},
					"response": []
				},
				{
					"name": "companyCredits/:creditId/increaseBalance - Increase balance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/companyCredits/:creditId/increaseBalance",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"companyCredits",
								":creditId",
								"increaseBalance"
							],
							"variable": [
								{
									"key": "creditId",
									"value": "{{creditId}}"
								}
							]
						},
						"description": "Increases the company credit with an Allocate, Update, Refund, Revert, or Reimburse transaction. This transaction decreases company's outstanding balance and increases company's available credit."
					},
					"response": []
				},
				{
					"name": "companyCredits/:creditId/decreaseBalance - Decrease balance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/companyCredits/:creditId/decreaseBalance",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"companyCredits",
								":creditId",
								"decreaseBalance"
							],
							"variable": [
								{
									"key": "creditId",
									"value": "{{creditId}}"
								}
							]
						},
						"description": "Decreases the company credit with an Update, Reimburse, or Purchase transaction. This transaction increases company's outstanding balance and decreases company's available credit."
					},
					"response": []
				},
				{
					"name": "companyCredits/history - Returns the credit history for one or more companies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/companyCredits/history?searchCriteria[filterGroups][][filters][][field]={{searchCriteria[filterGroups][][filters][][field]}}&searchCriteria[filterGroups][][filters][][value]={{searchCriteria[filterGroups][][filters][][value]}}&searchCriteria[filterGroups][][filters][][conditionType]={{searchCriteria[filterGroups][][filters][][conditionType]}}&searchCriteria[sortOrders][][field]={{searchCriteria[sortOrders][][field]}}&searchCriteria[sortOrders][][direction]={{searchCriteria[sortOrders][][direction]}}&searchCriteria[pageSize]={{searchCriteria[pageSize]}}&searchCriteria[currentPage]={{searchCriteria[currentPage]}}",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"companyCredits",
								"history"
							],
							"query": [
								{
									"key": "searchCriteria[filterGroups][][filters][][field]",
									"value": "{{searchCriteria[filterGroups][][filters][][field]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][value]",
									"value": "{{searchCriteria[filterGroups][][filters][][value]}}"
								},
								{
									"key": "searchCriteria[filterGroups][][filters][][conditionType]",
									"value": "{{searchCriteria[filterGroups][][filters][][conditionType]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][field]",
									"value": "{{searchCriteria[sortOrders][][field]}}"
								},
								{
									"key": "searchCriteria[sortOrders][][direction]",
									"value": "{{searchCriteria[sortOrders][][direction]}}"
								},
								{
									"key": "searchCriteria[pageSize]",
									"value": "{{searchCriteria[pageSize]}}"
								},
								{
									"key": "searchCriteria[currentPage]",
									"value": "{{searchCriteria[currentPage]}}"
								}
							]
						},
						"description": "Returns the credit history for one or more companies."
					},
					"response": []
				},
				{
					"name": "companyCredits/history/:historyId - Update the PO Number and/or comment for a Reimburse transaction",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{magentoProtocol}}://{{magentoDomain}}/rest/V1/companyCredits/history/:historyId",
							"protocol": "{{magentoProtocol}}",
							"host": [
								"{{magentoDomain}}"
							],
							"path": [
								"rest",
								"V1",
								"companyCredits",
								"history",
								":historyId"
							],
							"variable": [
								{
									"key": "historyId",
									"value": "{{historyId}}"
								}
							]
						},
						"description": "Update the PO Number and/or comment for a Reimburse transaction."
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{magentoAccessToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5d7f1e48-300e-41e4-bcef-3040d51d3e97",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ce75f985-37b0-415f-96bf-b549c7bd204a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}